

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Oct 14 10:51:59 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x20,16,_Interfaces
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  008C                     	;# 
    71  008E                     	;# 
    72  0091                     	;# 
    73  0092                     	;# 
    74  0095                     	;# 
    75  0096                     	;# 
    76  0097                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010E                     	;# 
    88  0111                     	;# 
    89  0112                     	;# 
    90  0113                     	;# 
    91  0114                     	;# 
    92  0115                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  0118                     	;# 
    96  0119                     	;# 
    97  011D                     	;# 
    98  018C                     	;# 
    99  018E                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0197                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019C                     	;# 
   114  019D                     	;# 
   115  019E                     	;# 
   116  019F                     	;# 
   117  020C                     	;# 
   118  0211                     	;# 
   119  0211                     	;# 
   120  0212                     	;# 
   121  0212                     	;# 
   122  0213                     	;# 
   123  0213                     	;# 
   124  0214                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0215                     	;# 
   129  0216                     	;# 
   130  0216                     	;# 
   131  0217                     	;# 
   132  0217                     	;# 
   133  0391                     	;# 
   134  0392                     	;# 
   135  0393                     	;# 
   136  039A                     	;# 
   137  039B                     	;# 
   138  0611                     	;# 
   139  0612                     	;# 
   140  0613                     	;# 
   141  0613                     	;# 
   142  0614                     	;# 
   143  0615                     	;# 
   144  0616                     	;# 
   145  0616                     	;# 
   146  0691                     	;# 
   147  0692                     	;# 
   148  0693                     	;# 
   149  0694                     	;# 
   150  0695                     	;# 
   151  0E8E                     	;# 
   152  0E8F                     	;# 
   153  0E90                     	;# 
   154  0E91                     	;# 
   155  0E92                     	;# 
   156  0E93                     	;# 
   157  0E94                     	;# 
   158  0E94                     	;# 
   159  0E95                     	;# 
   160  0E96                     	;# 
   161  0E97                     	;# 
   162  0E98                     	;# 
   163  0E99                     	;# 
   164  0E9A                     	;# 
   165  0E9B                     	;# 
   166  0E9C                     	;# 
   167  0E9D                     	;# 
   168  0E9E                     	;# 
   169  0E9F                     	;# 
   170  0FE4                     	;# 
   171  0FE5                     	;# 
   172  0FE6                     	;# 
   173  0FE7                     	;# 
   174  0FE8                     	;# 
   175  0FE9                     	;# 
   176  0FEA                     	;# 
   177  0FEB                     	;# 
   178  0FED                     	;# 
   179  0FEE                     	;# 
   180  0FEF                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000E                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  008C                     	;# 
   207  008E                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010E                     	;# 
   224  0111                     	;# 
   225  0112                     	;# 
   226  0113                     	;# 
   227  0114                     	;# 
   228  0115                     	;# 
   229  0116                     	;# 
   230  0117                     	;# 
   231  0118                     	;# 
   232  0119                     	;# 
   233  011D                     	;# 
   234  018C                     	;# 
   235  018E                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0194                     	;# 
   242  0195                     	;# 
   243  0196                     	;# 
   244  0197                     	;# 
   245  0199                     	;# 
   246  019A                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019C                     	;# 
   250  019D                     	;# 
   251  019E                     	;# 
   252  019F                     	;# 
   253  020C                     	;# 
   254  0211                     	;# 
   255  0211                     	;# 
   256  0212                     	;# 
   257  0212                     	;# 
   258  0213                     	;# 
   259  0213                     	;# 
   260  0214                     	;# 
   261  0214                     	;# 
   262  0215                     	;# 
   263  0215                     	;# 
   264  0215                     	;# 
   265  0216                     	;# 
   266  0216                     	;# 
   267  0217                     	;# 
   268  0217                     	;# 
   269  0391                     	;# 
   270  0392                     	;# 
   271  0393                     	;# 
   272  039A                     	;# 
   273  039B                     	;# 
   274  0611                     	;# 
   275  0612                     	;# 
   276  0613                     	;# 
   277  0613                     	;# 
   278  0614                     	;# 
   279  0615                     	;# 
   280  0616                     	;# 
   281  0616                     	;# 
   282  0691                     	;# 
   283  0692                     	;# 
   284  0693                     	;# 
   285  0694                     	;# 
   286  0695                     	;# 
   287  0E8E                     	;# 
   288  0E8F                     	;# 
   289  0E90                     	;# 
   290  0E91                     	;# 
   291  0E92                     	;# 
   292  0E93                     	;# 
   293  0E94                     	;# 
   294  0E94                     	;# 
   295  0E95                     	;# 
   296  0E96                     	;# 
   297  0E97                     	;# 
   298  0E98                     	;# 
   299  0E99                     	;# 
   300  0E9A                     	;# 
   301  0E9B                     	;# 
   302  0E9C                     	;# 
   303  0E9D                     	;# 
   304  0E9E                     	;# 
   305  0E9F                     	;# 
   306  0FE4                     	;# 
   307  0FE5                     	;# 
   308  0FE6                     	;# 
   309  0FE7                     	;# 
   310  0FE8                     	;# 
   311  0FE9                     	;# 
   312  0FEA                     	;# 
   313  0FEB                     	;# 
   314  0FED                     	;# 
   315  0FEE                     	;# 
   316  0FEF                     	;# 
   317                           
   318                           	psect	idataBANK0
   319  06EE                     __pidataBANK0:	
   320                           
   321                           ;initializer for _Buffers
   322  06EE  3408               	retlw	8
   323  06EF  3459               	retlw	low (_HIDTxBuffer| 0)
   324  06F0  3408               	retlw	8
   325  06F1  3451               	retlw	low (_HIDRxBuffer| 0)
   326                           
   327                           	psect	stringtext
   328  002F                     __pstringtext:	
   329  002F                     _StringDescriptorPointers:	
   330  002F  34C8               	retlw	low (_StringDescriptor0| (0+32768))
   331  0030  3480               	retlw	high (_StringDescriptor0| (0+32768))
   332  0031  34BB               	retlw	low (_StringDescriptor1| (0+32768))
   333  0032  3480               	retlw	high (_StringDescriptor1| (0+32768))
   334  0033  348D               	retlw	low (_StringDescriptor2| (0+32768))
   335  0034  3480               	retlw	high (_StringDescriptor2| (0+32768))
   336  0035                     __end_of_StringDescriptorPointers:	
   337  0035                     _HIDReport:	
   338  0035  3406               	retlw	6
   339  0036  34A0               	retlw	160
   340  0037  34FF               	retlw	255
   341  0038  3409               	retlw	9
   342  0039  3401               	retlw	1
   343  003A  34A1               	retlw	161
   344  003B  3401               	retlw	1
   345  003C  3409               	retlw	9
   346  003D  3401               	retlw	1
   347  003E  3415               	retlw	21
   348  003F  3400               	retlw	0
   349  0040  3426               	retlw	38
   350  0041  34FF               	retlw	255
   351  0042  3400               	retlw	0
   352  0043  3475               	retlw	117
   353  0044  3408               	retlw	8
   354  0045  3495               	retlw	149
   355  0046  3408               	retlw	8
   356  0047  3481               	retlw	129
   357  0048  3402               	retlw	2
   358  0049  3409               	retlw	9
   359  004A  3401               	retlw	1
   360  004B  3415               	retlw	21
   361  004C  3400               	retlw	0
   362  004D  3426               	retlw	38
   363  004E  34FF               	retlw	255
   364  004F  3400               	retlw	0
   365  0050  3475               	retlw	117
   366  0051  3408               	retlw	8
   367  0052  3495               	retlw	149
   368  0053  3408               	retlw	8
   369  0054  3491               	retlw	145
   370  0055  3402               	retlw	2
   371  0056  3409               	retlw	9
   372  0057  3402               	retlw	2
   373  0058  3415               	retlw	21
   374  0059  3400               	retlw	0
   375  005A  3426               	retlw	38
   376  005B  34FF               	retlw	255
   377  005C  3400               	retlw	0
   378  005D  3475               	retlw	117
   379  005E  3408               	retlw	8
   380  005F  3495               	retlw	149
   381  0060  3408               	retlw	8
   382  0061  34B1               	retlw	177
   383  0062  3402               	retlw	2
   384  0063  34C0               	retlw	192
   385  0064                     __end_of_HIDReport:	
   386  0064                     _ConfigurationDescriptor:	
   387  0064  3409               	retlw	9
   388  0065  3402               	retlw	2
   389  0066  3429               	retlw	41
   390  0067  3400               	retlw	0
   391  0068  3401               	retlw	1
   392  0069  3401               	retlw	1
   393  006A  3400               	retlw	0
   394  006B  34A0               	retlw	160
   395  006C  3432               	retlw	50
   396  006D  3409               	retlw	9
   397  006E  3404               	retlw	4
   398  006F  3400               	retlw	0
   399  0070  3400               	retlw	0
   400  0071  3402               	retlw	2
   401  0072  3403               	retlw	3
   402  0073  3400               	retlw	0
   403  0074  3400               	retlw	0
   404  0075  3400               	retlw	0
   405  0076  3409               	retlw	9
   406  0077  3421               	retlw	33
   407  0078  3411               	retlw	17
   408  0079  3401               	retlw	1
   409  007A  3400               	retlw	0
   410  007B  3401               	retlw	1
   411  007C  3422               	retlw	34
   412  007D  342F               	retlw	47
   413  007E  3400               	retlw	0
   414  007F  3407               	retlw	7
   415  0080  3405               	retlw	5
   416  0081  3481               	retlw	129
   417  0082  3403               	retlw	3
   418  0083  3408               	retlw	8
   419  0084  3400               	retlw	0
   420  0085  3401               	retlw	1
   421  0086  3407               	retlw	7
   422  0087  3405               	retlw	5
   423  0088  3401               	retlw	1
   424  0089  3403               	retlw	3
   425  008A  3408               	retlw	8
   426  008B  3400               	retlw	0
   427  008C  3401               	retlw	1
   428  008D                     __end_of_ConfigurationDescriptor:	
   429  008D                     _StringDescriptor2:	
   430  008D  341C               	retlw	28
   431  008E  3403               	retlw	3
   432  008F  3431               	retlw	49
   433  0090  3436               	retlw	54
   434  0091  3446               	retlw	70
   435  0092  3431               	retlw	49
   436  0093  3434               	retlw	52
   437  0094  3435               	retlw	53
   438  0095  3435               	retlw	53
   439  0096  3420               	retlw	32
   440  0097  3447               	retlw	71
   441  0098  3465               	retlw	101
   442  0099  346E               	retlw	110
   443  009A  3465               	retlw	101
   444  009B  3472               	retlw	114
   445  009C  3469               	retlw	105
   446  009D  3463               	retlw	99
   447  009E  3420               	retlw	32
   448  009F  3448               	retlw	72
   449  00A0  3449               	retlw	73
   450  00A1  3444               	retlw	68
   451  00A2  3420               	retlw	32
   452  00A3  3444               	retlw	68
   453  00A4  3465               	retlw	101
   454  00A5  3476               	retlw	118
   455  00A6  3469               	retlw	105
   456  00A7  3463               	retlw	99
   457  00A8  3465               	retlw	101
   458  00A9                     __end_of_StringDescriptor2:	
   459  00A9                     _DeviceDescriptor:	
   460  00A9  3412               	retlw	18
   461  00AA  3401               	retlw	1
   462  00AB  3400               	retlw	0
   463  00AC  3402               	retlw	2
   464  00AD  3400               	retlw	0
   465  00AE  3400               	retlw	0
   466  00AF  3400               	retlw	0
   467  00B0  3408               	retlw	8
   468  00B1  34D8               	retlw	216
   469  00B2  3404               	retlw	4
   470  00B3  34A5               	retlw	165
   471  00B4  3401               	retlw	1
   472  00B5  3401               	retlw	1
   473  00B6  3400               	retlw	0
   474  00B7  3401               	retlw	1
   475  00B8  3402               	retlw	2
   476  00B9  3400               	retlw	0
   477  00BA  3401               	retlw	1
   478  00BB                     __end_of_DeviceDescriptor:	
   479  00BB                     _StringDescriptor1:	
   480  00BB  340D               	retlw	13
   481  00BC  3403               	retlw	3
   482  00BD  3444               	retlw	68
   483  00BE  3449               	retlw	73
   484  00BF  3459               	retlw	89
   485  00C0  3420               	retlw	32
   486  00C1  3444               	retlw	68
   487  00C2  3465               	retlw	101
   488  00C3  3476               	retlw	118
   489  00C4  3469               	retlw	105
   490  00C5  3463               	retlw	99
   491  00C6  3465               	retlw	101
   492  00C7  3473               	retlw	115
   493  00C8                     __end_of_StringDescriptor1:	
   494  00C8                     _StringDescriptor0:	
   495  00C8  3403               	retlw	3
   496  00C9  3403               	retlw	3
   497  00CA  3409               	retlw	9
   498  00CB                     __end_of_StringDescriptor0:	
   499  000B                     _INTCONbits	set	11
   500  0012                     _PIR2bits	set	18
   501  0072                     _RC2	set	114
   502  0073                     _RC3	set	115
   503  0095                     _OPTION_REG	set	149
   504  0099                     _OSCCON	set	153
   505  0098                     _OSCTUNE	set	152
   506  0092                     _PIE2bits	set	146
   507  008E                     _TRISC	set	142
   508  010E                     _LATC	set	270
   509  018C                     _ANSELA	set	396
   510  018E                     _ANSELC	set	398
   511  039B                     _ACTCON	set	923
   512  0E99                     _EndpointFlags	set	3737
   513  0E96                     _UADDR	set	3734
   514  0E91                     _UCFG	set	3729
   515  0E8E                     _UCON	set	3726
   516  0E8E                     _UCONbits	set	3726
   517  0E97                     _UEIE	set	3735
   518  0E93                     _UEIR	set	3731
   519  0E98                     _UEP0	set	3736
   520  0E98                     _UEP0bits	set	3736
   521  0E92                     _UIE	set	3730
   522  0E92                     _UIEbits	set	3730
   523  0E90                     _UIR	set	3728
   524  0E90                     _UIRbits	set	3728
   525  0E8F                     _USTAT	set	3727
   526                           
   527                           ; #config settings
   528  0000                     
   529                           	psect	cinit
   530  0014                     start_initialization:	
   531  0014                     __initialization:	
   532                           
   533                           ; Initialize objects allocated to BANK0
   534  0014  3186  26EE  3180   	fcall	__pidataBANK0	;fetch initializer
   535  0017  00E4               	movwf	__pdataBANK0& (0+127)
   536  0018  3186  26EF  3180   	fcall	__pidataBANK0+1	;fetch initializer
   537  001B  00E5               	movwf	(__pdataBANK0+1)& (0+127)
   538  001C  3186  26F0  3180   	fcall	__pidataBANK0+2	;fetch initializer
   539  001F  00E6               	movwf	(__pdataBANK0+2)& (0+127)
   540  0020  3186  26F1  3180   	fcall	__pidataBANK0+3	;fetch initializer
   541  0023  00E7               	movwf	(__pdataBANK0+3)& (0+127)
   542                           
   543                           ; Clear objects allocated to BANK0
   544  0024  3030               	movlw	low __pbssBANK0
   545  0025  0084               	movwf	4
   546  0026  3000               	movlw	high __pbssBANK0
   547  0027  0085               	movwf	5
   548  0028  3034               	movlw	52
   549  0029  3186  26E8         	fcall	clear_ram0
   550  002B                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553  002B                     __end_of__initialization:	
   554  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   555  002C  0020               	movlb	0
   556  002D  3186  2E9A         	ljmp	_main	;jump to C main() function
   557                           
   558                           	psect	bssBANK0
   559  0030                     __pbssBANK0:	
   560  0030                     _ROMoutPtr:	
   561  0030                     	ds	2
   562  0032                     _wCount:	
   563  0032                     	ds	2
   564  0034                     _ButtonStatus:	
   565  0034                     	ds	1
   566  0035                     _CtrlTransferStage:	
   567  0035                     	ds	1
   568  0036                     _DeviceAddress:	
   569  0036                     	ds	1
   570  0037                     _DeviceState:	
   571  0037                     	ds	1
   572  0038                     _HIDPostProcess:	
   573  0038                     	ds	1
   574  0039                     _HidRxLen:	
   575  0039                     	ds	1
   576  003A                     _RemoteWakeup:	
   577  003A                     	ds	1
   578  003B                     _RequestHandled:	
   579  003B                     	ds	1
   580  003C                     _SelfPowered:	
   581  003C                     	ds	1
   582  003D                     _inPtr:	
   583  003D                     	ds	1
   584  003E                     _outPtr:	
   585  003E                     	ds	1
   586  003F                     _transferType:	
   587  003F                     	ds	1
   588  0040                     _SetupPacket:	
   589  0040                     	ds	9
   590  0049                     _ControlTransferBuffer:	
   591  0049                     	ds	8
   592  0051                     _HIDRxBuffer:	
   593  0051                     	ds	8
   594  0059                     _HIDTxBuffer:	
   595  0059                     	ds	8
   596  0061                     _CurrentConfiguration:	
   597  0061                     	ds	1
   598  0062                     _HidIdleRate:	
   599  0062                     	ds	1
   600  0063                     _HidProtocol:	
   601  0063                     	ds	1
   602                           
   603                           	psect	dataBANK0
   604  0064                     __pdataBANK0:	
   605  0064                     _Buffers:	
   606  0064                     	ds	4
   607                           
   608                           	psect	clrtext
   609  06E8                     clear_ram0:	
   610                           ;	Called with FSR0 containing the base address, and
   611                           ;	WREG with the size to clear
   612                           
   613  06E8  0064               	clrwdt	;clear the watchdog before getting into this loop
   614  06E9                     clrloop0:	
   615  06E9  0180               	clrf	0	;clear RAM location pointed to by FSR
   616  06EA  3101               	addfsr 0,1
   617  06EB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   618  06EC  2EE9               	goto	clrloop0	;have we reached the end yet?
   619  06ED  3400               	retlw	0	;all done for this memory range, return
   620                           
   621                           	psect	cstackCOMMON
   622  0070                     __pcstackCOMMON:	
   623  0070                     ?_ProcessUSBTransactions:	
   624  0070                     ?_IsUsbDataAvaialble:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_ReArmInterface:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_HIDSend:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_InitializeUSB:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_EnableUSBModule:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_ISRCode:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_InitializeSystem:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_EnableInterrupts:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_PrepareTxBuffer:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_ProcessIncommingData:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_CheckUsb:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_ProcessIO:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_main:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_HIDInitEndpoints:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ??_HIDInitEndpoints:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_ProcessHIDRequest:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ??_ProcessHIDRequest:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_GetDescriptor:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ??_GetDescriptor:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_GetStatus:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ??_GetStatus:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_SetFeature:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ??_SetFeature:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_ProcessStandardRequest:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_InDataStage:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ??_InDataStage:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_OutDataStage:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ??_OutDataStage:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_SetupStage:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_WaitForSetupStage:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ??_WaitForSetupStage:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_ProcessControlTransfer:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_ResetPPBuffers:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_UnSuspend:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ??_UnSuspend:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_StartOfFrame:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ??_StartOfFrame:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_Stall:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_Suspend:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ??_Suspend:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_BusReset:	
   745                           ; 1 bytes @ 0x0
   746                           
   747                           
   748                           ; 1 bytes @ 0x0
   749  0070                     	ds	1
   750  0071                     ??_Stall:	
   751  0071                     ??_BusReset:	
   752                           ; 1 bytes @ 0x1
   753                           
   754  0071                     ProcessHIDRequest@descriptorType:	
   755                           ; 1 bytes @ 0x1
   756                           
   757  0071                     OutDataStage@i:	
   758                           ; 1 bytes @ 0x1
   759                           
   760                           
   761                           ; 2 bytes @ 0x1
   762  0071                     	ds	1
   763  0072                     ProcessHIDRequest@bRequest:	
   764  0072                     GetStatus@endpointNum:	
   765                           ; 1 bytes @ 0x2
   766                           
   767  0072                     SetFeature@recipient:	
   768                           ; 1 bytes @ 0x2
   769                           
   770  0072                     InDataStage@i:	
   771                           ; 1 bytes @ 0x2
   772                           
   773                           
   774                           ; 1 bytes @ 0x2
   775  0072                     	ds	1
   776  0073                     GetDescriptor@descriptorIndex:	
   777  0073                     GetStatus@endpointDir:	
   778                           ; 1 bytes @ 0x3
   779                           
   780  0073                     SetFeature@feature:	
   781                           ; 1 bytes @ 0x3
   782                           
   783  0073                     InDataStage@bufferSize:	
   784                           ; 1 bytes @ 0x3
   785                           
   786  0073                     OutDataStage@bufferSize:	
   787                           ; 2 bytes @ 0x3
   788                           
   789                           
   790                           ; 2 bytes @ 0x3
   791  0073                     	ds	1
   792  0074                     HIDInitEndpoints@i:	
   793  0074                     GetDescriptor@descriptorType:	
   794                           ; 1 bytes @ 0x4
   795                           
   796  0074                     GetStatus@recipient:	
   797                           ; 1 bytes @ 0x4
   798                           
   799  0074                     SetFeature@endpointNum:	
   800                           ; 1 bytes @ 0x4
   801                           
   802                           
   803                           ; 1 bytes @ 0x4
   804  0074                     	ds	1
   805  0075                     SetFeature@endpointDir:	
   806                           
   807                           ; 1 bytes @ 0x5
   808  0075                     	ds	1
   809  0076                     ??_ProcessStandardRequest:	
   810                           
   811                           ; 1 bytes @ 0x6
   812  0076                     	ds	1
   813  0077                     ProcessStandardRequest@request:	
   814                           
   815                           ; 1 bytes @ 0x7
   816  0077                     	ds	1
   817  0078                     ??_SetupStage:	
   818                           
   819                           ; 1 bytes @ 0x8
   820  0078                     	ds	1
   821  0079                     ??_ProcessControlTransfer:	
   822                           
   823                           ; 1 bytes @ 0x9
   824  0079                     	ds	2
   825  007B                     ProcessControlTransfer@PID:	
   826                           
   827                           ; 1 bytes @ 0xB
   828  007B                     	ds	1
   829  007C                     ??_ProcessUSBTransactions:	
   830                           
   831                           ; 1 bytes @ 0xC
   832  007C                     	ds	1
   833  007D                     ??_ISRCode:	
   834                           
   835                           ; 1 bytes @ 0xD
   836  007D                     	ds	1
   837                           
   838                           	psect	cstackBANK0
   839  0068                     __pcstackBANK0:	
   840  0068                     ??_IsUsbDataAvaialble:	
   841  0068                     ??_ReArmInterface:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0068                     ??_HIDSend:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0068                     ??_InitializeUSB:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0068                     ??_EnableUSBModule:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0068                     ??_InitializeSystem:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0068                     ??_EnableInterrupts:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0068                     ??_PrepareTxBuffer:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0068                     ??_ResetPPBuffers:	
   863                           ; 1 bytes @ 0x0
   864                           
   865                           
   866                           ; 1 bytes @ 0x0
   867  0068                     	ds	1
   868  0069                     PrepareTxBuffer@i:	
   869  0069                     IsUsbDataAvaialble@InterfaceNo:	
   870                           ; 1 bytes @ 0x1
   871                           
   872                           
   873                           ; 1 bytes @ 0x1
   874  0069                     	ds	1
   875  006A                     ??_ProcessIncommingData:	
   876  006A                     ReArmInterface@InterfaceNo:	
   877                           ; 1 bytes @ 0x2
   878                           
   879  006A                     HIDSend@InterfaceNo:	
   880                           ; 1 bytes @ 0x2
   881                           
   882                           
   883                           ; 1 bytes @ 0x2
   884  006A                     	ds	1
   885  006B                     ??_CheckUsb:	
   886  006B                     ??_ProcessIO:	
   887                           ; 1 bytes @ 0x3
   888                           
   889  006B                     ??_main:	
   890                           ; 1 bytes @ 0x3
   891                           
   892                           
   893                           	psect	maintext
   894  069A                     __pmaintext:	
   895                           ; 1 bytes @ 0x3
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 130 in file "Source/Main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : B1F/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels required when called:   10
   921 ;; This function calls:
   922 ;;		_EnableInterrupts
   923 ;;		_EnableUSBModule
   924 ;;		_InitializeSystem
   925 ;;		_InitializeUSB
   926 ;;		_ProcessIO
   927 ;; This function is called by:
   928 ;;		Startup code after reset
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _main
   934  069A                     _main:	
   935                           
   936                           ;Main.c: 132: InitializeSystem();
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   940  069A  3186  2674  3186   	fcall	_InitializeSystem
   941                           
   942                           ;Main.c: 133: InitializeUSB();
   943  069D  3186  26AA  3186   	fcall	_InitializeUSB
   944                           
   945                           ;Main.c: 134: EnableUSBModule();
   946  06A0  3186  2649  3186   	fcall	_EnableUSBModule
   947                           
   948                           ;Main.c: 135: EnableInterrupts();
   949  06A3  3186  26D0  3186   	fcall	_EnableInterrupts
   950  06A6                     l2187:	
   951                           ;Main.c: 137: while(1) { ProcessIO(); }
   952                           
   953  06A6  3186  2611  3186   	fcall	_ProcessIO
   954  06A9  2EA6               	goto	l2187
   955  06AA                     __end_of_main:	
   956                           
   957                           	psect	text1
   958  0611                     __ptext1:	
   959 ;; *************** function _ProcessIO *****************
   960 ;; Defined at:
   961 ;;		line 114 in file "Source/Main.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    9
   982 ;; This function calls:
   983 ;;		_CheckUsb
   984 ;;		_HIDSend
   985 ;;		_PrepareTxBuffer
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _ProcessIO
   993  0611                     _ProcessIO:	
   994                           
   995                           ;Main.c: 117: if (((DeviceState == 0x05) && (UCONbits.SUSPND==0))) CheckUsb();
   996                           
   997                           ;incstack = 0
   998                           ; Regs used in _ProcessIO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   999  0611  3005               	movlw	5
  1000  0612  0020               	movlb	0	; select bank0
  1001  0613  0637               	xorwf	_DeviceState,w
  1002  0614  1D03               	btfss	3,2
  1003  0615  2E1C               	goto	l2141
  1004  0616  003D               	movlb	29	; select bank29
  1005  0617  188E               	btfsc	14,1	;volatile
  1006  0618  2E1C               	goto	l2141
  1007  0619  3186  2688  3186   	fcall	_CheckUsb
  1008  061C                     l2141:	
  1009                           
  1010                           ;Main.c: 120: if (RC2 == ButtonStatus ) return;
  1011  061C  3000               	movlw	0
  1012  061D  0020               	movlb	0	; select bank0
  1013  061E  190E               	btfsc	14,2	;volatile
  1014  061F  3001               	movlw	1
  1015  0620  0634               	xorwf	_ButtonStatus,w
  1016  0621  1903               	btfsc	3,2
  1017  0622  0008               	return
  1018                           
  1019                           ;Main.c: 123: PrepareTxBuffer();
  1020  0623  3185  25F2  3186   	fcall	_PrepareTxBuffer
  1021                           
  1022                           ;Main.c: 124: HIDSend(0x00);
  1023  0626  3000               	movlw	0
  1024  0627  3184  24F1         	fcall	_HIDSend
  1025                           
  1026                           ;Main.c: 127: ButtonStatus = RC2;
  1027  0629  3000               	movlw	0
  1028  062A  0020               	movlb	0	; select bank0
  1029  062B  190E               	btfsc	14,2	;volatile
  1030  062C  3001               	movlw	1
  1031  062D  00B4               	movwf	_ButtonStatus
  1032  062E  0008               	return
  1033  062F                     __end_of_ProcessIO:	
  1034                           
  1035                           	psect	text2
  1036  0688                     __ptext2:	
  1037 ;; *************** function _CheckUsb *****************
  1038 ;; Defined at:
  1039 ;;		line 104 in file "Source/Main.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1057 ;;Total ram usage:        0 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    8
  1060 ;; This function calls:
  1061 ;;		_HIDSend
  1062 ;;		_IsUsbDataAvaialble
  1063 ;;		_ProcessIncommingData
  1064 ;;		_ReArmInterface
  1065 ;; This function is called by:
  1066 ;;		_ProcessIO
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _CheckUsb
  1072  0688                     _CheckUsb:	
  1073                           
  1074                           ;Main.c: 106: if(IsUsbDataAvaialble(0x00) > 0 )
  1075                           
  1076                           ;incstack = 0
  1077                           ; Regs used in _CheckUsb: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1078  0688  3000               	movlw	0
  1079  0689  3185  25CD  3186   	fcall	_IsUsbDataAvaialble
  1080  068C  3A00               	xorlw	0
  1081  068D  1903               	skipnz
  1082  068E  0008               	return
  1083                           
  1084                           ;Main.c: 107: {
  1085                           ;Main.c: 108: ProcessIncommingData();
  1086  068F  3186  265F  3186   	fcall	_ProcessIncommingData
  1087                           
  1088                           ;Main.c: 109: ReArmInterface(0x00);
  1089  0692  3000               	movlw	0
  1090  0693  3184  249B  3186   	fcall	_ReArmInterface
  1091                           
  1092                           ;Main.c: 110: HIDSend(0x00);
  1093  0696  3000               	movlw	0
  1094  0697  3184  24F1         	fcall	_HIDSend
  1095  0699  0008               	return
  1096  069A                     __end_of_CheckUsb:	
  1097                           
  1098                           	psect	text3
  1099  049B                     __ptext3:	
  1100 ;; *************** function _ReArmInterface *****************
  1101 ;; Defined at:
  1102 ;;		line 194 in file "Source/Usb.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  InterfaceNo     1    wreg     unsigned char 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  InterfaceNo     1    2[BANK0 ] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1118 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1119 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1120 ;;Total ram usage:        3 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    6
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_CheckUsb
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           
  1131                           ;psect for function _ReArmInterface
  1132  049B                     _ReArmInterface:	
  1133                           
  1134                           ;incstack = 0
  1135                           ; Regs used in _ReArmInterface: [wreg+fsr1l+fsr1h+status,2+status,0]
  1136                           ;ReArmInterface@InterfaceNo stored from wreg
  1137  049B  0020               	movlb	0	; select bank0
  1138  049C  00EA               	movwf	ReArmInterface@InterfaceNo
  1139                           
  1140                           ;Usb.c: 200: if(!(Interfaces[InterfaceNo + 1].Output.Stat & 0x80))
  1141  049D  086A               	movf	ReArmInterface@InterfaceNo,w
  1142  049E  00E8               	movwf	??_ReArmInterface
  1143  049F  3002               	movlw	2
  1144  04A0                     u2005:	
  1145  04A0  35E8               	lslf	??_ReArmInterface,f
  1146  04A1  3EFF               	addlw	-1
  1147  04A2  1D03               	skipz
  1148  04A3  2CA0               	goto	u2005
  1149  04A4  3568               	lslf	??_ReArmInterface,w
  1150  04A5  3E08               	addlw	8
  1151  04A6  3E20               	addlw	32
  1152  04A7  0086               	movwf	6
  1153  04A8  0187               	clrf	7
  1154  04A9  1B81               	btfsc	1,7
  1155  04AA  0008               	return
  1156                           
  1157                           ;Usb.c: 201: {
  1158                           ;Usb.c: 203: Interfaces[InterfaceNo + 1].Output.Cnt = Buffers[(InterfaceNo * 2) + 1].Siz
      +                          e;
  1159  04AB  356A               	lslf	ReArmInterface@InterfaceNo,w
  1160  04AC  0709               	addwf	9,w
  1161  04AD  3E02               	addlw	2
  1162  04AE  3E64               	addlw	(low (_Buffers| 0))& (0+255)
  1163  04AF  0086               	movwf	6
  1164  04B0  0187               	clrf	7
  1165  04B1  0801               	movf	1,w
  1166  04B2  00E8               	movwf	??_ReArmInterface
  1167  04B3  086A               	movf	ReArmInterface@InterfaceNo,w
  1168  04B4  00E9               	movwf	??_ReArmInterface+1
  1169  04B5  3002               	movlw	2
  1170  04B6                     u2025:	
  1171  04B6  35E9               	lslf	??_ReArmInterface+1,f
  1172  04B7  3EFF               	addlw	-1
  1173  04B8  1D03               	skipz
  1174  04B9  2CB6               	goto	u2025
  1175  04BA  3569               	lslf	??_ReArmInterface+1,w
  1176  04BB  3E09               	addlw	9
  1177  04BC  3E20               	addlw	32
  1178  04BD  0086               	movwf	6
  1179  04BE  0187               	clrf	7
  1180  04BF  0868               	movf	??_ReArmInterface,w
  1181  04C0  0081               	movwf	1
  1182                           
  1183                           ;Usb.c: 207: if(Interfaces[InterfaceNo + 1].Output.Stat & 0x40)
  1184  04C1  086A               	movf	ReArmInterface@InterfaceNo,w
  1185  04C2  00E8               	movwf	??_ReArmInterface
  1186  04C3  3002               	movlw	2
  1187  04C4                     u2035:	
  1188  04C4  35E8               	lslf	??_ReArmInterface,f
  1189  04C5  3EFF               	addlw	-1
  1190  04C6  1D03               	skipz
  1191  04C7  2CC4               	goto	u2035
  1192  04C8  3568               	lslf	??_ReArmInterface,w
  1193  04C9  3E08               	addlw	8
  1194  04CA  3E20               	addlw	32
  1195  04CB  0086               	movwf	6
  1196  04CC  0187               	clrf	7
  1197  04CD  1F01               	btfss	1,6
  1198  04CE  2CE0               	goto	l1863
  1199                           
  1200                           ;Usb.c: 208: Interfaces[InterfaceNo + 1].Output.Stat = 0x80 | 0x08;
  1201  04CF  3088               	movlw	136
  1202  04D0  00E8               	movwf	??_ReArmInterface
  1203  04D1  086A               	movf	ReArmInterface@InterfaceNo,w
  1204  04D2  00E9               	movwf	??_ReArmInterface+1
  1205  04D3  3002               	movlw	2
  1206  04D4                     u2055:	
  1207  04D4  35E9               	lslf	??_ReArmInterface+1,f
  1208  04D5  3EFF               	addlw	-1
  1209  04D6  1D03               	skipz
  1210  04D7  2CD4               	goto	u2055
  1211  04D8  3569               	lslf	??_ReArmInterface+1,w
  1212  04D9  3E08               	addlw	8
  1213  04DA  3E20               	addlw	32
  1214  04DB  0086               	movwf	6
  1215  04DC  0187               	clrf	7
  1216  04DD  0868               	movf	??_ReArmInterface,w
  1217  04DE  0081               	movwf	1
  1218  04DF  0008               	return
  1219  04E0                     l1863:	
  1220                           
  1221                           ;Usb.c: 209: else
  1222                           ;Usb.c: 210: Interfaces[InterfaceNo + 1].Output.Stat = 0x80 | 0x40 | 0x08;
  1223  04E0  30C8               	movlw	200
  1224  04E1  00E8               	movwf	??_ReArmInterface
  1225  04E2  086A               	movf	ReArmInterface@InterfaceNo,w
  1226  04E3  00E9               	movwf	??_ReArmInterface+1
  1227  04E4  3002               	movlw	2
  1228  04E5                     u2065:	
  1229  04E5  35E9               	lslf	??_ReArmInterface+1,f
  1230  04E6  3EFF               	addlw	-1
  1231  04E7  1D03               	skipz
  1232  04E8  2CE5               	goto	u2065
  1233  04E9  3569               	lslf	??_ReArmInterface+1,w
  1234  04EA  3E08               	addlw	8
  1235  04EB  3E20               	addlw	32
  1236  04EC  0086               	movwf	6
  1237  04ED  0187               	clrf	7
  1238  04EE  0868               	movf	??_ReArmInterface,w
  1239  04EF  0081               	movwf	1
  1240  04F0  0008               	return
  1241  04F1                     __end_of_ReArmInterface:	
  1242                           
  1243                           	psect	text4
  1244  065F                     __ptext4:	
  1245 ;; *************** function _ProcessIncommingData *****************
  1246 ;; Defined at:
  1247 ;;		line 83 in file "Source/Main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1265 ;;Total ram usage:        0 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    7
  1268 ;; This function calls:
  1269 ;;		_PrepareTxBuffer
  1270 ;; This function is called by:
  1271 ;;		_CheckUsb
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _ProcessIncommingData
  1277  065F                     _ProcessIncommingData:	
  1278                           
  1279                           ;Main.c: 85: if(HIDRxBuffer[0] == 0x80)
  1280                           
  1281                           ;incstack = 0
  1282                           ; Regs used in _ProcessIncommingData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1283  065F  3080               	movlw	128
  1284  0660  0020               	movlb	0	; select bank0
  1285  0661  0651               	xorwf	_HIDRxBuffer,w	;volatile
  1286  0662  1D03               	btfss	3,2
  1287  0663  2E67               	goto	l1833
  1288                           
  1289                           ;Main.c: 86: {
  1290                           ;Main.c: 88: PrepareTxBuffer();
  1291  0664  3185  25F2  3186   	fcall	_PrepareTxBuffer
  1292  0667                     l1833:	
  1293                           
  1294                           ;Main.c: 89: }
  1295                           ;Main.c: 91: if(HIDRxBuffer[0] == 0x81)
  1296  0667  3081               	movlw	129
  1297  0668  0020               	movlb	0	; select bank0
  1298  0669  0651               	xorwf	_HIDRxBuffer,w	;volatile
  1299  066A  1D03               	btfss	3,2
  1300  066B  0008               	return
  1301                           
  1302                           ;Main.c: 92: {
  1303                           ;Main.c: 94: if(RC3) RC3 = 0; else RC3 = 1;
  1304  066C  1D8E               	btfss	14,3	;volatile
  1305  066D  2E70               	goto	l86
  1306  066E  118E               	bcf	14,3	;volatile
  1307  066F  2E71               	goto	l1839
  1308  0670                     l86:	
  1309  0670  158E               	bsf	14,3	;volatile
  1310  0671                     l1839:	
  1311                           
  1312                           ;Main.c: 97: PrepareTxBuffer();
  1313  0671  3185  25F2         	fcall	_PrepareTxBuffer
  1314  0673  0008               	return
  1315  0674                     __end_of_ProcessIncommingData:	
  1316                           
  1317                           	psect	text5
  1318  05F2                     __ptext5:	
  1319 ;; *************** function _PrepareTxBuffer *****************
  1320 ;; Defined at:
  1321 ;;		line 68 in file "Source/Main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  i               1    1[BANK0 ] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1337 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1338 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1339 ;;Total ram usage:        2 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    6
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_ProcessIncommingData
  1346 ;;		_ProcessIO
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _PrepareTxBuffer
  1352  05F2                     _PrepareTxBuffer:	
  1353                           
  1354                           ;Main.c: 70: char i;
  1355                           ;Main.c: 72: HIDTxBuffer[0] = 0x80;
  1356                           
  1357                           ;incstack = 0
  1358                           ; Regs used in _PrepareTxBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1359  05F2  3080               	movlw	128
  1360  05F3  0020               	movlb	0	; select bank0
  1361  05F4  00E8               	movwf	??_PrepareTxBuffer
  1362  05F5  0868               	movf	??_PrepareTxBuffer,w
  1363  05F6  00D9               	movwf	_HIDTxBuffer	;volatile
  1364                           
  1365                           ;Main.c: 73: HIDTxBuffer[1] = RC2;
  1366  05F7  3000               	movlw	0
  1367  05F8  190E               	btfsc	14,2	;volatile
  1368  05F9  3001               	movlw	1
  1369  05FA  00DA               	movwf	_HIDTxBuffer+1	;volatile
  1370                           
  1371                           ;Main.c: 74: HIDTxBuffer[2] = RC3;
  1372  05FB  3000               	movlw	0
  1373  05FC  198E               	btfsc	14,3	;volatile
  1374  05FD  3001               	movlw	1
  1375  05FE  00DB               	movwf	_HIDTxBuffer+2	;volatile
  1376                           
  1377                           ;Main.c: 77: for(i = 3 ; i < 0x08; i++)
  1378  05FF  3003               	movlw	3
  1379  0600  00E8               	movwf	??_PrepareTxBuffer
  1380  0601  0868               	movf	??_PrepareTxBuffer,w
  1381  0602  00E9               	movwf	PrepareTxBuffer@i
  1382  0603                     L1:	
  1383  0603  3008               	movlw	8
  1384  0604  0269               	subwf	PrepareTxBuffer@i,w
  1385  0605  1803               	btfsc	3,0
  1386  0606  0008               	return
  1387                           
  1388                           ;Main.c: 78: {
  1389                           ;Main.c: 79: HIDTxBuffer[i] = 0x00;
  1390  0607  0869               	movf	PrepareTxBuffer@i,w
  1391  0608  3E59               	addlw	(low (_HIDTxBuffer| 0))& (0+255)
  1392  0609  0086               	movwf	6
  1393  060A  0187               	clrf	7
  1394  060B  0181               	clrf	1
  1395  060C  3001               	movlw	1
  1396  060D  00E8               	movwf	??_PrepareTxBuffer
  1397  060E  0868               	movf	??_PrepareTxBuffer,w
  1398  060F  07E9               	addwf	PrepareTxBuffer@i,f
  1399  0610  2E03               	goto	L1
  1400  0611                     __end_of_PrepareTxBuffer:	
  1401                           
  1402                           	psect	text6
  1403  05CD                     __ptext6:	
  1404 ;; *************** function _IsUsbDataAvaialble *****************
  1405 ;; Defined at:
  1406 ;;		line 184 in file "Source/Usb.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  InterfaceNo     1    wreg     unsigned char 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  InterfaceNo     1    1[BANK0 ] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      unsigned char 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1421 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1422 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1423 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1424 ;;Total ram usage:        2 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    6
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_CheckUsb
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _IsUsbDataAvaialble
  1436  05CD                     _IsUsbDataAvaialble:	
  1437                           
  1438                           ;incstack = 0
  1439                           ; Regs used in _IsUsbDataAvaialble: [wreg+fsr1l+fsr1h+status,2+status,0]
  1440                           ;IsUsbDataAvaialble@InterfaceNo stored from wreg
  1441  05CD  0020               	movlb	0	; select bank0
  1442  05CE  00E9               	movwf	IsUsbDataAvaialble@InterfaceNo
  1443                           
  1444                           ;Usb.c: 186: if(InterfaceNo >= 0x01) return 0;
  1445  05CF  0869               	movf	IsUsbDataAvaialble@InterfaceNo,w
  1446  05D0  1903               	btfsc	3,2
  1447  05D1  2DD4               	goto	l1847
  1448  05D2  3000               	movlw	0
  1449  05D3  0008               	return
  1450  05D4                     l1847:	
  1451                           
  1452                           ;Usb.c: 187: if(!(Interfaces[InterfaceNo + 1].Output.Stat & 0x80))
  1453  05D4  0869               	movf	IsUsbDataAvaialble@InterfaceNo,w
  1454  05D5  00E8               	movwf	??_IsUsbDataAvaialble
  1455  05D6  3002               	movlw	2
  1456  05D7                     u1975:	
  1457  05D7  35E8               	lslf	??_IsUsbDataAvaialble,f
  1458  05D8  3EFF               	addlw	-1
  1459  05D9  1D03               	skipz
  1460  05DA  2DD7               	goto	u1975
  1461  05DB  3568               	lslf	??_IsUsbDataAvaialble,w
  1462  05DC  3E08               	addlw	8
  1463  05DD  3E20               	addlw	32
  1464  05DE  0086               	movwf	6
  1465  05DF  0187               	clrf	7
  1466  05E0  1B81               	btfsc	1,7
  1467  05E1  2DF0               	goto	l1853
  1468                           
  1469                           ;Usb.c: 188: {
  1470                           ;Usb.c: 189: return Interfaces[InterfaceNo + 1].Output.Cnt;
  1471  05E2  0869               	movf	IsUsbDataAvaialble@InterfaceNo,w
  1472  05E3  00E8               	movwf	??_IsUsbDataAvaialble
  1473  05E4  3002               	movlw	2
  1474  05E5                     u1995:	
  1475  05E5  35E8               	lslf	??_IsUsbDataAvaialble,f
  1476  05E6  3EFF               	addlw	-1
  1477  05E7  1D03               	skipz
  1478  05E8  2DE5               	goto	u1995
  1479  05E9  3568               	lslf	??_IsUsbDataAvaialble,w
  1480  05EA  3E09               	addlw	9
  1481  05EB  3E20               	addlw	32
  1482  05EC  0086               	movwf	6
  1483  05ED  0187               	clrf	7
  1484  05EE  0801               	movf	1,w
  1485  05EF  0008               	return
  1486  05F0                     l1853:	
  1487                           
  1488                           ;Usb.c: 190: }
  1489                           ;Usb.c: 191: return 0;
  1490  05F0  3000               	movlw	0
  1491  05F1  0008               	return
  1492  05F2                     __end_of_IsUsbDataAvaialble:	
  1493                           
  1494                           	psect	text7
  1495  04F1                     __ptext7:	
  1496 ;; *************** function _HIDSend *****************
  1497 ;; Defined at:
  1498 ;;		line 214 in file "Source/Usb.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  InterfaceNo     1    wreg     unsigned char 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  InterfaceNo     1    2[BANK0 ] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1516 ;;Total ram usage:        3 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    6
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_CheckUsb
  1523 ;;		_ProcessIO
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _HIDSend
  1529  04F1                     _HIDSend:	
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _HIDSend: [wreg+fsr1l+fsr1h+status,2+status,0]
  1533                           ;HIDSend@InterfaceNo stored from wreg
  1534  04F1  0020               	movlb	0	; select bank0
  1535  04F2  00EA               	movwf	HIDSend@InterfaceNo
  1536                           
  1537                           ;Usb.c: 217: if (Interfaces[InterfaceNo + 1].Input.Stat & 0x80) return;
  1538  04F3  086A               	movf	HIDSend@InterfaceNo,w
  1539  04F4  00E8               	movwf	??_HIDSend
  1540  04F5  3002               	movlw	2
  1541  04F6                     u2075:	
  1542  04F6  35E8               	lslf	??_HIDSend,f
  1543  04F7  3EFF               	addlw	-1
  1544  04F8  1D03               	skipz
  1545  04F9  2CF6               	goto	u2075
  1546  04FA  3568               	lslf	??_HIDSend,w
  1547  04FB  3E0C               	addlw	12
  1548  04FC  3E20               	addlw	32
  1549  04FD  0086               	movwf	6
  1550  04FE  0187               	clrf	7
  1551  04FF  1B81               	btfsc	1,7
  1552  0500  0008               	return
  1553                           
  1554                           ;Usb.c: 221: Interfaces[InterfaceNo + 1].Input.Cnt = Buffers[InterfaceNo * 2].Size;
  1555  0501  356A               	lslf	HIDSend@InterfaceNo,w
  1556  0502  0709               	addwf	9,w
  1557  0503  3E64               	addlw	(low (_Buffers| 0))& (0+255)
  1558  0504  0086               	movwf	6
  1559  0505  0187               	clrf	7
  1560  0506  0801               	movf	1,w
  1561  0507  00E8               	movwf	??_HIDSend
  1562  0508  086A               	movf	HIDSend@InterfaceNo,w
  1563  0509  00E9               	movwf	??_HIDSend+1
  1564  050A  3002               	movlw	2
  1565  050B                     u2095:	
  1566  050B  35E9               	lslf	??_HIDSend+1,f
  1567  050C  3EFF               	addlw	-1
  1568  050D  1D03               	skipz
  1569  050E  2D0B               	goto	u2095
  1570  050F  3569               	lslf	??_HIDSend+1,w
  1571  0510  3E0D               	addlw	13
  1572  0511  3E20               	addlw	32
  1573  0512  0086               	movwf	6
  1574  0513  0187               	clrf	7
  1575  0514  0868               	movf	??_HIDSend,w
  1576  0515  0081               	movwf	1
  1577                           
  1578                           ;Usb.c: 223: if(Interfaces[InterfaceNo + 1].Input.Stat & 0x40)
  1579  0516  086A               	movf	HIDSend@InterfaceNo,w
  1580  0517  00E8               	movwf	??_HIDSend
  1581  0518  3002               	movlw	2
  1582  0519                     u2105:	
  1583  0519  35E8               	lslf	??_HIDSend,f
  1584  051A  3EFF               	addlw	-1
  1585  051B  1D03               	skipz
  1586  051C  2D19               	goto	u2105
  1587  051D  3568               	lslf	??_HIDSend,w
  1588  051E  3E0C               	addlw	12
  1589  051F  3E20               	addlw	32
  1590  0520  0086               	movwf	6
  1591  0521  0187               	clrf	7
  1592  0522  1F01               	btfss	1,6
  1593  0523  2D35               	goto	l1873
  1594                           
  1595                           ;Usb.c: 224: Interfaces[InterfaceNo + 1].Input.Stat = 0x80 | 0x08;
  1596  0524  3088               	movlw	136
  1597  0525  00E8               	movwf	??_HIDSend
  1598  0526  086A               	movf	HIDSend@InterfaceNo,w
  1599  0527  00E9               	movwf	??_HIDSend+1
  1600  0528  3002               	movlw	2
  1601  0529                     u2125:	
  1602  0529  35E9               	lslf	??_HIDSend+1,f
  1603  052A  3EFF               	addlw	-1
  1604  052B  1D03               	skipz
  1605  052C  2D29               	goto	u2125
  1606  052D  3569               	lslf	??_HIDSend+1,w
  1607  052E  3E0C               	addlw	12
  1608  052F  3E20               	addlw	32
  1609  0530  0086               	movwf	6
  1610  0531  0187               	clrf	7
  1611  0532  0868               	movf	??_HIDSend,w
  1612  0533  0081               	movwf	1
  1613  0534  0008               	return
  1614  0535                     l1873:	
  1615                           
  1616                           ;Usb.c: 225: else
  1617                           ;Usb.c: 226: Interfaces[InterfaceNo + 1].Input.Stat = 0x80 | 0x40 | 0x08;
  1618  0535  30C8               	movlw	200
  1619  0536  00E8               	movwf	??_HIDSend
  1620  0537  086A               	movf	HIDSend@InterfaceNo,w
  1621  0538  00E9               	movwf	??_HIDSend+1
  1622  0539  3002               	movlw	2
  1623  053A                     u2135:	
  1624  053A  35E9               	lslf	??_HIDSend+1,f
  1625  053B  3EFF               	addlw	-1
  1626  053C  1D03               	skipz
  1627  053D  2D3A               	goto	u2135
  1628  053E  3569               	lslf	??_HIDSend+1,w
  1629  053F  3E0C               	addlw	12
  1630  0540  3E20               	addlw	32
  1631  0541  0086               	movwf	6
  1632  0542  0187               	clrf	7
  1633  0543  0868               	movf	??_HIDSend,w
  1634  0544  0081               	movwf	1
  1635  0545  0008               	return
  1636  0546                     __end_of_HIDSend:	
  1637                           
  1638                           	psect	text8
  1639  06AA                     __ptext8:	
  1640 ;; *************** function _InitializeUSB *****************
  1641 ;; Defined at:
  1642 ;;		line 760 in file "Source/Usb.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, pclath, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    7
  1663 ;; This function calls:
  1664 ;;		_ResetPPBuffers
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           
  1671                           ;psect for function _InitializeUSB
  1672  06AA                     _InitializeUSB:	
  1673                           
  1674                           ;Usb.c: 762: UCFG = 0x14;
  1675                           
  1676                           ;incstack = 0
  1677                           ; Regs used in _InitializeUSB: [wreg+status,2+status,0+pclath+cstack]
  1678  06AA  3014               	movlw	20
  1679  06AB  003D               	movlb	29	; select bank29
  1680  06AC  0091               	movwf	17	;volatile
  1681                           
  1682                           ;Usb.c: 763: DeviceState = 0x00;
  1683  06AD  0020               	movlb	0	; select bank0
  1684  06AE  01B7               	clrf	_DeviceState
  1685                           
  1686                           ;Usb.c: 764: RemoteWakeup = 0x00;
  1687  06AF  01BA               	clrf	_RemoteWakeup
  1688                           
  1689                           ;Usb.c: 765: CurrentConfiguration = 0x00;
  1690  06B0  01E1               	clrf	_CurrentConfiguration
  1691                           
  1692                           ;Usb.c: 766: UADDR = 0;
  1693  06B1  003D               	movlb	29	; select bank29
  1694  06B2  0196               	clrf	22	;volatile
  1695                           
  1696                           ;Usb.c: 767: UEIR = 0;
  1697  06B3  0193               	clrf	19	;volatile
  1698                           
  1699                           ;Usb.c: 768: ResetPPBuffers();
  1700  06B4  3186  26F2         	fcall	_ResetPPBuffers
  1701                           
  1702                           ;Usb.c: 769: UCONbits.PKTDIS = 0;
  1703  06B6  003D               	movlb	29	; select bank29
  1704  06B7  120E               	bcf	14,4	;volatile
  1705  06B8  0008               	return
  1706  06B9                     __end_of_InitializeUSB:	
  1707                           
  1708                           	psect	text9
  1709  06F2                     __ptext9:	
  1710 ;; *************** function _ResetPPBuffers *****************
  1711 ;; Defined at:
  1712 ;;		line 751 in file "Source/Usb.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		None
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1730 ;;Total ram usage:        0 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    6
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_InitializeUSB
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           
  1741                           ;psect for function _ResetPPBuffers
  1742  06F2                     _ResetPPBuffers:	
  1743                           
  1744                           ;Usb.c: 754: {
  1745                           ;Usb.c: 755: UCONbits.PPBRST = 1;
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _ResetPPBuffers: []
  1749                           ;Usb.c: 753: do
  1750  06F2  003D               	movlb	29	; select bank29
  1751  06F3  170E               	bsf	14,6	;volatile
  1752                           
  1753                           ;Usb.c: 756: UCONbits.PPBRST = 0;
  1754  06F4  130E               	bcf	14,6	;volatile
  1755  06F5  0008               	return
  1756  06F6                     __end_of_ResetPPBuffers:	
  1757                           
  1758                           	psect	text10
  1759  0674                     __ptext10:	
  1760 ;; *************** function _InitializeSystem *****************
  1761 ;; Defined at:
  1762 ;;		line 44 in file "Source/Main.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1780 ;;Total ram usage:        0 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    6
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           
  1791                           ;psect for function _InitializeSystem
  1792  0674                     _InitializeSystem:	
  1793                           
  1794                           ;Main.c: 46: ANSELA = 0x00;
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in _InitializeSystem: [wreg+status,2]
  1798  0674  0023               	movlb	3	; select bank3
  1799  0675  018C               	clrf	12	;volatile
  1800                           
  1801                           ;Main.c: 47: ANSELC = 0x00;
  1802  0676  018E               	clrf	14	;volatile
  1803                           
  1804                           ;Main.c: 48: OSCTUNE = 0x00;
  1805  0677  0021               	movlb	1	; select bank1
  1806  0678  0198               	clrf	24	;volatile
  1807                           
  1808                           ;Main.c: 49: OSCCON = 0xFC;
  1809  0679  30FC               	movlw	252
  1810  067A  0099               	movwf	25	;volatile
  1811                           
  1812                           ;Main.c: 50: ACTCON = 0x90;
  1813  067B  3090               	movlw	144
  1814  067C  0027               	movlb	7	; select bank7
  1815  067D  009B               	movwf	27	;volatile
  1816                           
  1817                           ;Main.c: 51: OPTION_REG = 0xC3;
  1818  067E  30C3               	movlw	195
  1819  067F  0021               	movlb	1	; select bank1
  1820  0680  0095               	movwf	21	;volatile
  1821                           
  1822                           ;Main.c: 53: TRISC = 0b00000100;
  1823  0681  3004               	movlw	4
  1824  0682  008E               	movwf	14	;volatile
  1825                           
  1826                           ;Main.c: 54: LATC = 0b00000000;
  1827  0683  0022               	movlb	2	; select bank2
  1828  0684  018E               	clrf	14	;volatile
  1829                           
  1830                           ;Main.c: 56: ButtonStatus = 0;
  1831  0685  0020               	movlb	0	; select bank0
  1832  0686  01B4               	clrf	_ButtonStatus
  1833  0687  0008               	return
  1834  0688                     __end_of_InitializeSystem:	
  1835                           
  1836                           	psect	text11
  1837  0649                     __ptext11:	
  1838 ;; *************** function _EnableUSBModule *****************
  1839 ;; Defined at:
  1840 ;;		line 772 in file "Source/Usb.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1858 ;;Total ram usage:        1 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    6
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _EnableUSBModule
  1870  0649                     _EnableUSBModule:	
  1871                           
  1872                           ;Usb.c: 776: if(UCONbits.USBEN == 0)
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in _EnableUSBModule: [wreg+status,2]
  1876  0649  003D               	movlb	29	; select bank29
  1877  064A  198E               	btfsc	14,3	;volatile
  1878  064B  2E52               	goto	l368
  1879                           
  1880                           ;Usb.c: 777: {
  1881                           ;Usb.c: 778: UCON = 0;
  1882  064C  018E               	clrf	14	;volatile
  1883                           
  1884                           ;Usb.c: 779: UIE = 0;
  1885  064D  0192               	clrf	18	;volatile
  1886                           
  1887                           ;Usb.c: 780: UCONbits.USBEN = 1;
  1888  064E  158E               	bsf	14,3	;volatile
  1889                           
  1890                           ;Usb.c: 781: DeviceState = 0x01;
  1891  064F  0020               	movlb	0	; select bank0
  1892  0650  01B7               	clrf	_DeviceState
  1893  0651  0AB7               	incf	_DeviceState,f
  1894  0652                     l368:	
  1895                           ;Usb.c: 782: }
  1896                           ;Usb.c: 784: while (UCONbits.SE0);
  1897                           
  1898  0652  003D               	movlb	29	; select bank29
  1899  0653  1A8E               	btfsc	14,5	;volatile
  1900  0654  2E52               	goto	l368
  1901                           
  1902                           ;Usb.c: 788: UIR = 0;
  1903  0655  0190               	clrf	16	;volatile
  1904                           
  1905                           ;Usb.c: 789: UIE = 0;
  1906  0656  0192               	clrf	18	;volatile
  1907                           
  1908                           ;Usb.c: 790: UIEbits.URSTIE = 1;
  1909  0657  1412               	bsf	18,0	;volatile
  1910                           
  1911                           ;Usb.c: 791: UIEbits.IDLEIE = 1;
  1912  0658  1612               	bsf	18,4	;volatile
  1913                           
  1914                           ;Usb.c: 792: DeviceState = 0x02;
  1915  0659  3002               	movlw	2
  1916  065A  0020               	movlb	0	; select bank0
  1917  065B  00E8               	movwf	??_EnableUSBModule
  1918  065C  0868               	movf	??_EnableUSBModule,w
  1919  065D  00B7               	movwf	_DeviceState
  1920  065E  0008               	return
  1921  065F                     __end_of_EnableUSBModule:	
  1922                           
  1923                           	psect	text12
  1924  06D0                     __ptext12:	
  1925 ;; *************** function _EnableInterrupts *****************
  1926 ;; Defined at:
  1927 ;;		line 59 in file "Source/Main.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1945 ;;Total ram usage:        0 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    6
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           
  1956                           ;psect for function _EnableInterrupts
  1957  06D0                     _EnableInterrupts:	
  1958                           
  1959                           ;Main.c: 61: UIE = 0x4B;
  1960                           
  1961                           ;incstack = 0
  1962                           ; Regs used in _EnableInterrupts: [wreg]
  1963  06D0  304B               	movlw	75
  1964  06D1  003D               	movlb	29	; select bank29
  1965  06D2  0092               	movwf	18	;volatile
  1966                           
  1967                           ;Main.c: 62: INTCONbits.PEIE = 1;
  1968  06D3  170B               	bsf	11,6	;volatile
  1969                           
  1970                           ;Main.c: 63: INTCONbits.GIE = 1;
  1971  06D4  178B               	bsf	11,7	;volatile
  1972                           
  1973                           ;Main.c: 64: PIE2bits.USBIE = 1;
  1974  06D5  0021               	movlb	1	; select bank1
  1975  06D6  1512               	bsf	18,2	;volatile
  1976  06D7  0008               	return
  1977  06D8                     __end_of_EnableInterrupts:	
  1978                           
  1979                           	psect	intentry
  1980  0004                     __pintentry:	
  1981 ;; *************** function _ISRCode *****************
  1982 ;; Defined at:
  1983 ;;		line 39 in file "Source/Main.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;Total ram usage:        1 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    5
  2004 ;; This function calls:
  2005 ;;		_ProcessUSBTransactions
  2006 ;; This function is called by:
  2007 ;;		Interrupt level 1
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011  0004                     _ISRCode:	
  2012                           
  2013                           ;incstack = 0
  2014  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2015                           
  2016                           ; Regs used in _ISRCode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2017  0005  3180               	pagesel	$
  2018  0006  0020               	movlb	0	; select bank0
  2019  0007  087F               	movf	127,w
  2020  0008  00FD               	movwf	??_ISRCode
  2021                           
  2022                           ;Main.c: 41: if (PIR2bits.USBIF) ProcessUSBTransactions();
  2023  0009  1D12               	btfss	18,2	;volatile
  2024  000A  280D               	goto	i1l70
  2025  000B  3182  22BB         	fcall	_ProcessUSBTransactions
  2026  000D                     i1l70:	
  2027  000D  087D               	movf	??_ISRCode,w
  2028  000E  0020               	movlb	0	; select bank0
  2029  000F  00FF               	movwf	127
  2030  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2031  0011  0009               	retfie
  2032  0012                     __end_of_ISRCode:	
  2033                           
  2034                           	psect	text14
  2035  02BB                     __ptext14:	
  2036 ;; *************** function _ProcessUSBTransactions *****************
  2037 ;; Defined at:
  2038 ;;		line 858 in file "Source/Usb.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2056 ;;Total ram usage:        1 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    4
  2059 ;; This function calls:
  2060 ;;		_BusReset
  2061 ;;		_ProcessControlTransfer
  2062 ;;		_Stall
  2063 ;;		_StartOfFrame
  2064 ;;		_Suspend
  2065 ;;		_UnSuspend
  2066 ;; This function is called by:
  2067 ;;		_ISRCode
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _ProcessUSBTransactions
  2073  02BB                     _ProcessUSBTransactions:	
  2074                           
  2075                           ;Usb.c: 861: if(DeviceState == 0x00)
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _ProcessUSBTransactions: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2079  02BB  0020               	movlb	0	; select bank0
  2080  02BC  0837               	movf	_DeviceState,w
  2081  02BD  1D03               	btfss	3,2
  2082  02BE  2AC4               	goto	i1l393
  2083                           
  2084                           ;Usb.c: 862: {
  2085                           ;Usb.c: 863: UIR = 0;
  2086  02BF  003D               	movlb	29	; select bank29
  2087  02C0  0190               	clrf	16	;volatile
  2088                           
  2089                           ;Usb.c: 864: PIR2bits.USBIF = 0;
  2090  02C1  0020               	movlb	0	; select bank0
  2091  02C2  1112               	bcf	18,2	;volatile
  2092                           
  2093                           ;Usb.c: 865: return;
  2094  02C3  0008               	return
  2095  02C4                     i1l393:	
  2096                           
  2097                           ;Usb.c: 866: }
  2098                           ;Usb.c: 869: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  2099  02C4  003D               	movlb	29	; select bank29
  2100  02C5  1910               	btfsc	16,2	;volatile
  2101  02C6  1D12               	btfss	18,2	;volatile
  2102  02C7  2AD0               	goto	i1l2053
  2103                           
  2104                           ;Usb.c: 870: {
  2105                           ;Usb.c: 871: UnSuspend();
  2106  02C8  3186  26D8  3182   	fcall	_UnSuspend
  2107                           
  2108                           ;Usb.c: 872: UIR &= ~(0x04);
  2109  02CB  30FB               	movlw	251
  2110  02CC  00FC               	movwf	??_ProcessUSBTransactions
  2111  02CD  087C               	movf	??_ProcessUSBTransactions,w
  2112  02CE  003D               	movlb	29	; select bank29
  2113  02CF  0590               	andwf	16,f	;volatile
  2114  02D0                     i1l2053:	
  2115                           
  2116                           ;Usb.c: 873: }
  2117                           ;Usb.c: 877: if(UCONbits.SUSPND == 1)
  2118  02D0  1C8E               	btfss	14,1	;volatile
  2119  02D1  2AD6               	goto	i1l396
  2120                           
  2121                           ;Usb.c: 878: {
  2122                           ;Usb.c: 879: UIR = 0;
  2123  02D2  0190               	clrf	16	;volatile
  2124                           
  2125                           ;Usb.c: 880: PIR2bits.USBIF = 0;
  2126  02D3  0020               	movlb	0	; select bank0
  2127  02D4  1112               	bcf	18,2	;volatile
  2128                           
  2129                           ;Usb.c: 881: return;
  2130  02D5  0008               	return
  2131  02D6                     i1l396:	
  2132                           
  2133                           ;Usb.c: 882: }
  2134                           ;Usb.c: 885: if (UIRbits.URSTIF && UIEbits.URSTIE)
  2135  02D6  1810               	btfsc	16,0	;volatile
  2136  02D7  1C12               	btfss	18,0	;volatile
  2137  02D8  2AE1               	goto	i1l2067
  2138                           
  2139                           ;Usb.c: 886: {
  2140                           ;Usb.c: 887: BusReset();
  2141  02D9  3186  262F  3182   	fcall	_BusReset
  2142                           
  2143                           ;Usb.c: 888: UIR &= ~(0x01);
  2144  02DC  30FE               	movlw	254
  2145  02DD  00FC               	movwf	??_ProcessUSBTransactions
  2146  02DE  087C               	movf	??_ProcessUSBTransactions,w
  2147  02DF  003D               	movlb	29	; select bank29
  2148  02E0  0590               	andwf	16,f	;volatile
  2149  02E1                     i1l2067:	
  2150                           
  2151                           ;Usb.c: 889: }
  2152                           ;Usb.c: 891: if (UIRbits.IDLEIF && UIEbits.IDLEIE)
  2153  02E1  1A10               	btfsc	16,4	;volatile
  2154  02E2  1E12               	btfss	18,4	;volatile
  2155  02E3  2AEC               	goto	i1l2075
  2156                           
  2157                           ;Usb.c: 892: {
  2158                           ;Usb.c: 894: Suspend();
  2159  02E4  3186  26E0  3182   	fcall	_Suspend
  2160                           
  2161                           ;Usb.c: 895: UIR &= ~(0x10);
  2162  02E7  30EF               	movlw	239
  2163  02E8  00FC               	movwf	??_ProcessUSBTransactions
  2164  02E9  087C               	movf	??_ProcessUSBTransactions,w
  2165  02EA  003D               	movlb	29	; select bank29
  2166  02EB  0590               	andwf	16,f	;volatile
  2167  02EC                     i1l2075:	
  2168                           
  2169                           ;Usb.c: 896: }
  2170                           ;Usb.c: 898: if (UIRbits.SOFIF && UIEbits.SOFIE)
  2171  02EC  1B10               	btfsc	16,6	;volatile
  2172  02ED  1F12               	btfss	18,6	;volatile
  2173  02EE  2AF7               	goto	i1l2083
  2174                           
  2175                           ;Usb.c: 899: {
  2176                           ;Usb.c: 900: StartOfFrame();
  2177  02EF  3186  26F6  3182   	fcall	_StartOfFrame
  2178                           
  2179                           ;Usb.c: 901: UIR &= ~(0x40);
  2180  02F2  30BF               	movlw	191
  2181  02F3  00FC               	movwf	??_ProcessUSBTransactions
  2182  02F4  087C               	movf	??_ProcessUSBTransactions,w
  2183  02F5  003D               	movlb	29	; select bank29
  2184  02F6  0590               	andwf	16,f	;volatile
  2185  02F7                     i1l2083:	
  2186                           
  2187                           ;Usb.c: 902: }
  2188                           ;Usb.c: 904: if (UIRbits.STALLIF && UIEbits.STALLIE)
  2189  02F7  1A90               	btfsc	16,5	;volatile
  2190  02F8  1E92               	btfss	18,5	;volatile
  2191  02F9  2B02               	goto	i1l2091
  2192                           
  2193                           ;Usb.c: 905: {
  2194                           ;Usb.c: 906: Stall();
  2195  02FA  3186  26C7  3182   	fcall	_Stall
  2196                           
  2197                           ;Usb.c: 907: UIR &= ~(0x20);
  2198  02FD  30DF               	movlw	223
  2199  02FE  00FC               	movwf	??_ProcessUSBTransactions
  2200  02FF  087C               	movf	??_ProcessUSBTransactions,w
  2201  0300  003D               	movlb	29	; select bank29
  2202  0301  0590               	andwf	16,f	;volatile
  2203  0302                     i1l2091:	
  2204                           
  2205                           ;Usb.c: 908: }
  2206                           ;Usb.c: 910: if (UIRbits.UERRIF && UIEbits.UERRIE)
  2207  0302  1890               	btfsc	16,1	;volatile
  2208  0303  1C92               	btfss	18,1	;volatile
  2209  0304  2B0B               	goto	i1l2101
  2210                           
  2211                           ;Usb.c: 911: {
  2212                           ;Usb.c: 914: UIRbits.UERRIF = 0;
  2213  0305  1090               	bcf	16,1	;volatile
  2214                           
  2215                           ;Usb.c: 915: UEIR = 0 ;
  2216  0306  0193               	clrf	19	;volatile
  2217                           
  2218                           ;Usb.c: 916: UIR &= ~(0x02);
  2219  0307  30FD               	movlw	253
  2220  0308  00FC               	movwf	??_ProcessUSBTransactions
  2221  0309  087C               	movf	??_ProcessUSBTransactions,w
  2222  030A  0590               	andwf	16,f	;volatile
  2223  030B                     i1l2101:	
  2224                           
  2225                           ;Usb.c: 917: }
  2226                           ;Usb.c: 920: if (DeviceState < 0x03)
  2227  030B  3003               	movlw	3
  2228  030C  0020               	movlb	0	; select bank0
  2229  030D  0237               	subwf	_DeviceState,w
  2230  030E  1803               	skipnc
  2231  030F  2B15               	goto	i1l402
  2232                           
  2233                           ;Usb.c: 921: {
  2234                           ;Usb.c: 922: UIR = 0;
  2235  0310  003D               	movlb	29	; select bank29
  2236  0311  0190               	clrf	16	;volatile
  2237                           
  2238                           ;Usb.c: 923: PIR2bits.USBIF = 0;
  2239  0312  0020               	movlb	0	; select bank0
  2240  0313  1112               	bcf	18,2	;volatile
  2241                           
  2242                           ;Usb.c: 924: return;
  2243  0314  0008               	return
  2244  0315                     i1l402:	
  2245                           
  2246                           ;Usb.c: 925: }
  2247                           ;Usb.c: 928: if(UIRbits.TRNIF && UIEbits.TRNIE)
  2248  0315  003D               	movlb	29	; select bank29
  2249  0316  1990               	btfsc	16,3	;volatile
  2250  0317  1D92               	btfss	18,3	;volatile
  2251  0318  2B20               	goto	i1l2115
  2252                           
  2253                           ;Usb.c: 929: {
  2254                           ;Usb.c: 930: ProcessControlTransfer();
  2255  0319  3183  23E4         	fcall	_ProcessControlTransfer
  2256                           
  2257                           ;Usb.c: 931: UIR &= ~(0x08);
  2258  031B  30F7               	movlw	247
  2259  031C  00FC               	movwf	??_ProcessUSBTransactions
  2260  031D  087C               	movf	??_ProcessUSBTransactions,w
  2261  031E  003D               	movlb	29	; select bank29
  2262  031F  0590               	andwf	16,f	;volatile
  2263  0320                     i1l2115:	
  2264                           
  2265                           ;Usb.c: 932: }
  2266                           ;Usb.c: 933: PIR2bits.USBIF = 0;
  2267  0320  0020               	movlb	0	; select bank0
  2268  0321  1112               	bcf	18,2	;volatile
  2269  0322  0008               	return
  2270  0323                     __end_of_ProcessUSBTransactions:	
  2271                           
  2272                           	psect	text15
  2273  06D8                     __ptext15:	
  2274 ;; *************** function _UnSuspend *****************
  2275 ;; Defined at:
  2276 ;;		line 796 in file "Source/Usb.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2294 ;;Total ram usage:        1 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_ProcessUSBTransactions
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _UnSuspend
  2305  06D8                     _UnSuspend:	
  2306                           
  2307                           ;Usb.c: 798: UCONbits.SUSPND = 0;
  2308                           
  2309                           ;incstack = 0
  2310                           ; Regs used in _UnSuspend: [wreg+status,2+status,0]
  2311  06D8  003D               	movlb	29	; select bank29
  2312  06D9  108E               	bcf	14,1	;volatile
  2313                           
  2314                           ;Usb.c: 799: UIEbits.ACTVIE = 0;
  2315  06DA  1112               	bcf	18,2	;volatile
  2316                           
  2317                           ;Usb.c: 800: UIR &= 0xFB;
  2318  06DB  30FB               	movlw	251
  2319  06DC  00F0               	movwf	??_UnSuspend
  2320  06DD  0870               	movf	??_UnSuspend,w
  2321  06DE  0590               	andwf	16,f	;volatile
  2322  06DF  0008               	return
  2323  06E0                     __end_of_UnSuspend:	
  2324                           
  2325                           	psect	text16
  2326  06E0                     __ptext16:	
  2327 ;; *************** function _Suspend *****************
  2328 ;; Defined at:
  2329 ;;		line 824 in file "Source/Usb.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;Total ram usage:        1 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_ProcessUSBTransactions
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _Suspend
  2358  06E0                     _Suspend:	
  2359                           
  2360                           ;Usb.c: 826: UIEbits.ACTVIE = 1;
  2361                           
  2362                           ;incstack = 0
  2363                           ; Regs used in _Suspend: [wreg+status,2+status,0]
  2364  06E0  003D               	movlb	29	; select bank29
  2365  06E1  1512               	bsf	18,2	;volatile
  2366                           
  2367                           ;Usb.c: 827: UIR &= 0xEF;
  2368  06E2  30EF               	movlw	239
  2369  06E3  00F0               	movwf	??_Suspend
  2370  06E4  0870               	movf	??_Suspend,w
  2371  06E5  0590               	andwf	16,f	;volatile
  2372                           
  2373                           ;Usb.c: 828: UCONbits.SUSPND = 1;
  2374  06E6  148E               	bsf	14,1	;volatile
  2375  06E7  0008               	return
  2376  06E8                     __end_of_Suspend:	
  2377                           
  2378                           	psect	text17
  2379  06F6                     __ptext17:	
  2380 ;; *************** function _StartOfFrame *****************
  2381 ;; Defined at:
  2382 ;;		line 805 in file "Source/Usb.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		None
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2400 ;;Total ram usage:        0 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_ProcessUSBTransactions
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           
  2410                           ;psect for function _StartOfFrame
  2411  06F6                     _StartOfFrame:	
  2412                           
  2413                           ;Usb.c: 808: UIRbits.SOFIF = 0;
  2414                           
  2415                           ;incstack = 0
  2416                           ; Regs used in _StartOfFrame: []
  2417  06F6  003D               	movlb	29	; select bank29
  2418  06F7  1310               	bcf	16,6	;volatile
  2419  06F8  0008               	return
  2420  06F9                     __end_of_StartOfFrame:	
  2421                           
  2422                           	psect	text18
  2423  06C7                     __ptext18:	
  2424 ;; *************** function _Stall *****************
  2425 ;; Defined at:
  2426 ;;		line 812 in file "Source/Usb.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;Total ram usage:        0 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    1
  2447 ;; This function calls:
  2448 ;;		_WaitForSetupStage
  2449 ;; This function is called by:
  2450 ;;		_ProcessUSBTransactions
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function _Stall
  2456  06C7                     _Stall:	
  2457                           
  2458                           ;Usb.c: 814: if(UEP0bits.EPSTALL == 1)
  2459                           
  2460                           ;incstack = 0
  2461                           ; Regs used in _Stall: [wreg+status,2+status,0+pclath+cstack]
  2462  06C7  003D               	movlb	29	; select bank29
  2463  06C8  1C18               	btfss	24,0	;volatile
  2464  06C9  2ECE               	goto	i1l2013
  2465                           
  2466                           ;Usb.c: 815: {
  2467                           ;Usb.c: 817: WaitForSetupStage();
  2468  06CA  3186  26B9         	fcall	_WaitForSetupStage
  2469                           
  2470                           ;Usb.c: 818: UEP0bits.EPSTALL = 0;
  2471  06CC  003D               	movlb	29	; select bank29
  2472  06CD  1018               	bcf	24,0	;volatile
  2473  06CE                     i1l2013:	
  2474                           
  2475                           ;Usb.c: 819: }
  2476                           ;Usb.c: 820: UIRbits.STALLIF = 0;
  2477  06CE  1290               	bcf	16,5	;volatile
  2478  06CF  0008               	return
  2479  06D0                     __end_of_Stall:	
  2480                           
  2481                           	psect	text19
  2482  03E4                     __ptext19:	
  2483 ;; *************** function _ProcessControlTransfer *****************
  2484 ;; Defined at:
  2485 ;;		line 691 in file "Source/Usb.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;		None
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  PID             1   11[COMMON] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2502 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2503 ;;Total ram usage:        3 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    3
  2506 ;; This function calls:
  2507 ;;		_InDataStage
  2508 ;;		_OutDataStage
  2509 ;;		_SetupStage
  2510 ;;		_WaitForSetupStage
  2511 ;; This function is called by:
  2512 ;;		_ProcessUSBTransactions
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function _ProcessControlTransfer
  2518  03E4                     _ProcessControlTransfer:	
  2519                           
  2520                           ;Usb.c: 693: if (USTAT == 0)
  2521                           
  2522                           ;incstack = 0
  2523                           ; Regs used in _ProcessControlTransfer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2524  03E4  003D               	movlb	29	; select bank29
  2525  03E5  080F               	movf	15,w	;volatile
  2526  03E6  1D03               	btfss	3,2
  2527  03E7  2C12               	goto	i1l1977
  2528                           
  2529                           ;Usb.c: 694: {
  2530                           ;Usb.c: 696: BYTE PID = (Interfaces[0].Output.Stat & 0x3C) >> 2;
  2531  03E8  0020               	movlb	0	; select bank0
  2532  03E9  0820               	movf	32,w	;volatile
  2533  03EA  00F9               	movwf	??_ProcessControlTransfer
  2534  03EB  3002               	movlw	2
  2535  03EC                     u220_25:	
  2536  03EC  36F9               	lsrf	??_ProcessControlTransfer,f
  2537  03ED  0B89               	decfsz	9,f
  2538  03EE  2BEC               	goto	u220_25
  2539  03EF  0879               	movf	??_ProcessControlTransfer,w
  2540  03F0  390F               	andlw	15
  2541  03F1  00FA               	movwf	??_ProcessControlTransfer+1
  2542  03F2  087A               	movf	??_ProcessControlTransfer+1,w
  2543  03F3  00FB               	movwf	ProcessControlTransfer@PID
  2544                           
  2545                           ;Usb.c: 697: if (PID == 0x0D)
  2546  03F4  300D               	movlw	13
  2547  03F5  067B               	xorwf	ProcessControlTransfer@PID,w
  2548  03F6  1D03               	btfss	3,2
  2549  03F7  2BFB               	goto	i1l1965
  2550                           
  2551                           ;Usb.c: 699: SetupStage();
  2552  03F8  3183  2323         	fcall	_SetupStage
  2553  03FA  0008               	return
  2554  03FB                     i1l1965:	
  2555                           
  2556                           ;Usb.c: 700: else if (CtrlTransferStage == 0x01)
  2557  03FB  0020               	movlb	0	; select bank0
  2558  03FC  0335               	decf	_CtrlTransferStage,w
  2559  03FD  1D03               	btfss	3,2
  2560  03FE  2C0F               	goto	i1l1975
  2561                           
  2562                           ;Usb.c: 701: {
  2563                           ;Usb.c: 702: OutDataStage();
  2564  03FF  3185  259A  3183   	fcall	_OutDataStage
  2565                           
  2566                           ;Usb.c: 703: if(Interfaces[0].Output.Stat & 0x40)
  2567  0402  0020               	movlb	0	; select bank0
  2568  0403  1F20               	btfss	32,6	;volatile
  2569  0404  2C0A               	goto	i1l1973
  2570                           
  2571                           ;Usb.c: 704: Interfaces[0].Output.Stat = 0x80 | 0x08;
  2572  0405  3088               	movlw	136
  2573  0406  00F9               	movwf	??_ProcessControlTransfer
  2574  0407  0879               	movf	??_ProcessControlTransfer,w
  2575  0408  00A0               	movwf	32	;volatile
  2576  0409  0008               	return
  2577  040A                     i1l1973:	
  2578                           
  2579                           ;Usb.c: 705: else
  2580                           ;Usb.c: 706: Interfaces[0].Output.Stat = 0x80 | 0x40 | 0x08;
  2581  040A  30C8               	movlw	200
  2582  040B  00F9               	movwf	??_ProcessControlTransfer
  2583  040C  0879               	movf	??_ProcessControlTransfer,w
  2584  040D  00A0               	movwf	32	;volatile
  2585                           
  2586                           ;Usb.c: 707: }
  2587  040E  0008               	return
  2588  040F                     i1l1975:	
  2589                           
  2590                           ;Usb.c: 708: else
  2591                           ;Usb.c: 709: {
  2592                           ;Usb.c: 711: WaitForSetupStage();
  2593  040F  3186  26B9         	fcall	_WaitForSetupStage
  2594                           
  2595                           ;Usb.c: 712: }
  2596                           ;Usb.c: 713: }
  2597  0411  0008               	return
  2598  0412                     i1l1977:	
  2599                           
  2600                           ;Usb.c: 715: else if(USTAT == 0x04)
  2601  0412  3004               	movlw	4
  2602  0413  003D               	movlb	29	; select bank29
  2603  0414  060F               	xorwf	15,w	;volatile
  2604  0415  1D03               	btfss	3,2
  2605  0416  0008               	return
  2606                           
  2607                           ;Usb.c: 716: {
  2608                           ;Usb.c: 718: if ((UADDR == 0) && (DeviceState == 0x04))
  2609  0417  0816               	movf	22,w	;volatile
  2610  0418  1D03               	btfss	3,2
  2611  0419  2C2A               	goto	i1l1989
  2612  041A  3004               	movlw	4
  2613  041B  0020               	movlb	0	; select bank0
  2614  041C  0637               	xorwf	_DeviceState,w
  2615  041D  1D03               	btfss	3,2
  2616  041E  2C2A               	goto	i1l1989
  2617                           
  2618                           ;Usb.c: 719: {
  2619                           ;Usb.c: 722: UADDR = SetupPacket.wValue0;
  2620  041F  0842               	movf	_SetupPacket+2,w	;volatile
  2621  0420  003D               	movlb	29	; select bank29
  2622  0421  0096               	movwf	22	;volatile
  2623                           
  2624                           ;Usb.c: 723: if(UADDR == 0)
  2625  0422  0816               	movf	22,w	;volatile
  2626  0423  1D03               	btfss	3,2
  2627  0424  2C2A               	goto	i1l1989
  2628                           
  2629                           ;Usb.c: 726: DeviceState = 0x03;
  2630  0425  3003               	movlw	3
  2631  0426  00F9               	movwf	??_ProcessControlTransfer
  2632  0427  0879               	movf	??_ProcessControlTransfer,w
  2633  0428  0020               	movlb	0	; select bank0
  2634  0429  00B7               	movwf	_DeviceState
  2635  042A                     i1l1989:	
  2636                           
  2637                           ;Usb.c: 727: }
  2638                           ;Usb.c: 729: if (CtrlTransferStage == 0x02)
  2639  042A  3002               	movlw	2
  2640  042B  0020               	movlb	0	; select bank0
  2641  042C  0635               	xorwf	_CtrlTransferStage,w
  2642  042D  1D03               	btfss	3,2
  2643  042E  2C3F               	goto	i1l1999
  2644                           
  2645                           ;Usb.c: 730: {
  2646                           ;Usb.c: 732: InDataStage();
  2647  042F  3181  214F  3183   	fcall	_InDataStage
  2648                           
  2649                           ;Usb.c: 735: if(Interfaces[0].Input.Stat & 0x40)
  2650  0432  0020               	movlb	0	; select bank0
  2651  0433  1F24               	btfss	36,6	;volatile
  2652  0434  2C3A               	goto	i1l1997
  2653                           
  2654                           ;Usb.c: 736: Interfaces[0].Input.Stat = 0x80 | 0x08;
  2655  0435  3088               	movlw	136
  2656  0436  00F9               	movwf	??_ProcessControlTransfer
  2657  0437  0879               	movf	??_ProcessControlTransfer,w
  2658  0438  00A4               	movwf	36	;volatile
  2659  0439  0008               	return
  2660  043A                     i1l1997:	
  2661                           
  2662                           ;Usb.c: 737: else
  2663                           ;Usb.c: 738: Interfaces[0].Input.Stat = 0x80 | 0x40 | 0x08;
  2664  043A  30C8               	movlw	200
  2665  043B  00F9               	movwf	??_ProcessControlTransfer
  2666  043C  0879               	movf	??_ProcessControlTransfer,w
  2667  043D  00A4               	movwf	36	;volatile
  2668                           
  2669                           ;Usb.c: 739: }
  2670  043E  0008               	return
  2671  043F                     i1l1999:	
  2672                           
  2673                           ;Usb.c: 740: else
  2674                           ;Usb.c: 741: {
  2675                           ;Usb.c: 743: WaitForSetupStage();
  2676  043F  3186  26B9         	fcall	_WaitForSetupStage
  2677                           
  2678                           ;Usb.c: 746: else
  2679                           ;Usb.c: 747: {
  2680                           
  2681                           ;Usb.c: 744: }
  2682                           ;Usb.c: 745: }
  2683  0441  0008               	return
  2684  0442                     __end_of_ProcessControlTransfer:	
  2685                           
  2686                           	psect	text20
  2687  0323                     __ptext20:	
  2688 ;; *************** function _SetupStage *****************
  2689 ;; Defined at:
  2690 ;;		line 610 in file "Source/Usb.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;Total ram usage:        1 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    2
  2711 ;; This function calls:
  2712 ;;		_InDataStage
  2713 ;;		_ProcessHIDRequest
  2714 ;;		_ProcessStandardRequest
  2715 ;; This function is called by:
  2716 ;;		_ProcessControlTransfer
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function _SetupStage
  2722  0323                     _SetupStage:	
  2723                           
  2724                           ;Usb.c: 614: Interfaces[0].Input.Stat &= ~0x80;
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _SetupStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2728  0323  307F               	movlw	127
  2729  0324  00F8               	movwf	??_SetupStage
  2730  0325  0878               	movf	??_SetupStage,w
  2731  0326  0020               	movlb	0	; select bank0
  2732  0327  05A4               	andwf	36,f	;volatile
  2733                           
  2734                           ;Usb.c: 615: Interfaces[0].Output.Stat &= ~0x80;
  2735  0328  307F               	movlw	127
  2736  0329  00F8               	movwf	??_SetupStage
  2737  032A  0878               	movf	??_SetupStage,w
  2738  032B  05A0               	andwf	32,f	;volatile
  2739                           
  2740                           ;Usb.c: 618: CtrlTransferStage = 0x00;
  2741  032C  01B5               	clrf	_CtrlTransferStage
  2742                           
  2743                           ;Usb.c: 619: RequestHandled = 0;
  2744  032D  01BB               	clrf	_RequestHandled
  2745                           
  2746                           ;Usb.c: 620: HIDPostProcess = 0;
  2747  032E  01B8               	clrf	_HIDPostProcess
  2748                           
  2749                           ;Usb.c: 621: wCount = 0;
  2750  032F  01B2               	clrf	_wCount
  2751  0330  01B3               	clrf	_wCount+1
  2752                           
  2753                           ;Usb.c: 624: ProcessStandardRequest();
  2754  0331  3182  2247  3183   	fcall	_ProcessStandardRequest
  2755                           
  2756                           ;Usb.c: 627: ProcessHIDRequest();
  2757  0334  3181  21CC  3183   	fcall	_ProcessHIDRequest
  2758                           
  2759                           ;Usb.c: 631: if (!RequestHandled)
  2760  0337  0020               	movlb	0	; select bank0
  2761  0338  083B               	movf	_RequestHandled,w
  2762  0339  1D03               	btfss	3,2
  2763  033A  2B47               	goto	i1l329
  2764                           
  2765                           ;Usb.c: 632: {
  2766                           ;Usb.c: 634: Interfaces[0].Output.Cnt = 0x08;
  2767  033B  3008               	movlw	8
  2768  033C  00A1               	movwf	33	;volatile
  2769                           
  2770                           ;Usb.c: 635: Interfaces[0].Output.ADDR = ((unsigned int)(((unsigned long)&SetupPacket) &
      +                           0xFFFF));
  2771  033D  3040               	movlw	low _SetupPacket
  2772  033E  00A2               	movwf	34	;volatile
  2773  033F  3000               	movlw	high _SetupPacket
  2774  0340  00A3               	movwf	35	;volatile
  2775                           
  2776                           ;Usb.c: 636: Interfaces[0].Output.Stat = 0x80 | 0x04;
  2777  0341  3084               	movlw	132
  2778  0342  00F8               	movwf	??_SetupStage
  2779  0343  0878               	movf	??_SetupStage,w
  2780  0344  00A0               	movwf	32	;volatile
  2781                           
  2782                           ;Usb.c: 637: Interfaces[0].Input.Stat = 0x80 | 0x04;
  2783  0345  3084               	movlw	132
  2784  0346  2B6C               	goto	L2
  2785  0347                     i1l329:	
  2786                           ;Usb.c: 638: }
  2787                           
  2788                           
  2789                           ;Usb.c: 639: else if (SetupPacket.bmRequestType & 0x80)
  2790  0347  1FC0               	btfss	_SetupPacket,7	;volatile
  2791  0348  2B70               	goto	i1l331
  2792                           
  2793                           ;Usb.c: 640: {
  2794                           ;Usb.c: 642: if(SetupPacket.wLength < wCount)
  2795  0349  0833               	movf	_wCount+1,w
  2796  034A  0247               	subwf	_SetupPacket+7,w	;volatile
  2797  034B  1D03               	skipz
  2798  034C  2B4F               	goto	u217_25
  2799  034D  0832               	movf	_wCount,w
  2800  034E  0246               	subwf	_SetupPacket+6,w	;volatile
  2801  034F                     u217_25:	
  2802  034F  1803               	skipnc
  2803  0350  2B55               	goto	i1l1919
  2804                           
  2805                           ;Usb.c: 643: wCount = SetupPacket.wLength;
  2806  0351  0847               	movf	_SetupPacket+7,w	;volatile
  2807  0352  00B3               	movwf	_wCount+1
  2808  0353  0846               	movf	_SetupPacket+6,w	;volatile
  2809  0354  00B2               	movwf	_wCount
  2810  0355                     i1l1919:	
  2811                           
  2812                           ;Usb.c: 644: InDataStage();
  2813  0355  3181  214F  3183   	fcall	_InDataStage
  2814                           
  2815                           ;Usb.c: 645: CtrlTransferStage = 0x02;
  2816  0358  3002               	movlw	2
  2817  0359  00F8               	movwf	??_SetupStage
  2818  035A  0878               	movf	??_SetupStage,w
  2819  035B  0020               	movlb	0	; select bank0
  2820  035C  00B5               	movwf	_CtrlTransferStage
  2821                           
  2822                           ;Usb.c: 647: Interfaces[0].Output.Cnt = 0x08;
  2823  035D  3008               	movlw	8
  2824  035E  00A1               	movwf	33	;volatile
  2825                           
  2826                           ;Usb.c: 648: Interfaces[0].Output.ADDR = ((unsigned int)(((unsigned long)&SetupPacket) &
      +                           0xFFFF));
  2827  035F  3040               	movlw	low _SetupPacket
  2828  0360  00A2               	movwf	34	;volatile
  2829  0361  3000               	movlw	high _SetupPacket
  2830  0362  00A3               	movwf	35	;volatile
  2831                           
  2832                           ;Usb.c: 649: Interfaces[0].Output.Stat = 0x80;
  2833  0363  3080               	movlw	128
  2834  0364  00F8               	movwf	??_SetupStage
  2835  0365  0878               	movf	??_SetupStage,w
  2836  0366  00A0               	movwf	32	;volatile
  2837                           
  2838                           ;Usb.c: 652: Interfaces[0].Input.ADDR = ((unsigned int)(((unsigned long)&ControlTransfer
      +                          Buffer) & 0xFFFF));
  2839  0367  3049               	movlw	low _ControlTransferBuffer
  2840  0368  00A6               	movwf	38	;volatile
  2841  0369  3000               	movlw	high _ControlTransferBuffer
  2842  036A  00A7               	movwf	39	;volatile
  2843                           
  2844                           ;Usb.c: 654: Interfaces[0].Input.Stat = 0x80 | 0x40 | 0x08;
  2845  036B  30C8               	movlw	200
  2846  036C                     L2:	
  2847  036C  00F8               	movwf	??_SetupStage
  2848  036D  0878               	movf	??_SetupStage,w
  2849  036E  00A4               	movwf	36	;volatile
  2850                           
  2851                           ;Usb.c: 655: }
  2852  036F  2B81               	goto	i1l1943
  2853  0370                     i1l331:	
  2854                           
  2855                           ;Usb.c: 656: else
  2856                           ;Usb.c: 657: {
  2857                           ;Usb.c: 659: CtrlTransferStage = 0x01;
  2858  0370  01B5               	clrf	_CtrlTransferStage
  2859  0371  0AB5               	incf	_CtrlTransferStage,f
  2860                           
  2861                           ;Usb.c: 662: Interfaces[0].Input.Cnt = 0;
  2862  0372  01A5               	clrf	37	;volatile
  2863                           
  2864                           ;Usb.c: 663: Interfaces[0].Input.Stat = 0x80 | 0x40 | 0x08;
  2865  0373  30C8               	movlw	200
  2866  0374  00F8               	movwf	??_SetupStage
  2867  0375  0878               	movf	??_SetupStage,w
  2868  0376  00A4               	movwf	36	;volatile
  2869                           
  2870                           ;Usb.c: 666: Interfaces[0].Output.Cnt = 0x08;
  2871  0377  3008               	movlw	8
  2872  0378  00A1               	movwf	33	;volatile
  2873                           
  2874                           ;Usb.c: 667: Interfaces[0].Output.ADDR = ((unsigned int)(((unsigned long)&ControlTransfe
      +                          rBuffer) & 0xFFFF));
  2875  0379  3049               	movlw	low _ControlTransferBuffer
  2876  037A  00A2               	movwf	34	;volatile
  2877  037B  3000               	movlw	high _ControlTransferBuffer
  2878  037C  00A3               	movwf	35	;volatile
  2879                           
  2880                           ;Usb.c: 669: Interfaces[0].Output.Stat = 0x80 | 0x40 | 0x08;
  2881  037D  30C8               	movlw	200
  2882  037E  00F8               	movwf	??_SetupStage
  2883  037F  0878               	movf	??_SetupStage,w
  2884  0380  00A0               	movwf	32	;volatile
  2885  0381                     i1l1943:	
  2886                           
  2887                           ;Usb.c: 670: }
  2888                           ;Usb.c: 673: UCONbits.PKTDIS = 0;
  2889  0381  003D               	movlb	29	; select bank29
  2890  0382  120E               	bcf	14,4	;volatile
  2891  0383  0008               	return
  2892  0384                     __end_of_SetupStage:	
  2893                           
  2894                           	psect	text21
  2895  0247                     __ptext21:	
  2896 ;; *************** function _ProcessStandardRequest *****************
  2897 ;; Defined at:
  2898 ;;		line 473 in file "Source/Usb.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  request         1    7[COMMON] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2916 ;;Total ram usage:        2 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    1
  2919 ;; This function calls:
  2920 ;;		_GetDescriptor
  2921 ;;		_GetStatus
  2922 ;;		_HIDInitEndpoints
  2923 ;;		_SetFeature
  2924 ;; This function is called by:
  2925 ;;		_SetupStage
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function _ProcessStandardRequest
  2931  0247                     _ProcessStandardRequest:	
  2932                           
  2933                           ;Usb.c: 475: BYTE request = SetupPacket.bRequest;
  2934                           
  2935                           ;incstack = 0
  2936                           ; Regs used in _ProcessStandardRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2937  0247  0020               	movlb	0	; select bank0
  2938  0248  0841               	movf	_SetupPacket+1,w	;volatile
  2939  0249  00F6               	movwf	??_ProcessStandardRequest
  2940  024A  0876               	movf	??_ProcessStandardRequest,w
  2941  024B  00F7               	movwf	ProcessStandardRequest@request
  2942                           
  2943                           ;Usb.c: 477: if((SetupPacket.bmRequestType & 0x60) != 0x00)
  2944  024C  0840               	movf	_SetupPacket,w	;volatile
  2945  024D  3960               	andlw	96
  2946  024E  1D03               	btfss	3,2
  2947  024F  0008               	return
  2948                           
  2949                           ;Usb.c: 482: if (request == 0x05)
  2950                           
  2951                           ;Usb.c: 480: return;
  2952  0250  3005               	movlw	5
  2953  0251  0677               	xorwf	ProcessStandardRequest@request,w
  2954  0252  1D03               	btfss	3,2
  2955  0253  2A5F               	goto	i1l1731
  2956                           
  2957                           ;Usb.c: 483: {
  2958                           ;Usb.c: 488: RequestHandled = 1;
  2959  0254  01BB               	clrf	_RequestHandled
  2960  0255  0ABB               	incf	_RequestHandled,f
  2961                           
  2962                           ;Usb.c: 489: DeviceState = 0x04;
  2963  0256  3004               	movlw	4
  2964  0257  00F6               	movwf	??_ProcessStandardRequest
  2965  0258  0876               	movf	??_ProcessStandardRequest,w
  2966  0259  00B7               	movwf	_DeviceState
  2967                           
  2968                           ;Usb.c: 490: DeviceAddress = SetupPacket.wValue0;
  2969  025A  0842               	movf	_SetupPacket+2,w	;volatile
  2970  025B  00F6               	movwf	??_ProcessStandardRequest
  2971  025C  0876               	movf	??_ProcessStandardRequest,w
  2972  025D  00B6               	movwf	_DeviceAddress
  2973                           
  2974                           ;Usb.c: 491: }
  2975  025E  0008               	return
  2976  025F                     i1l1731:	
  2977                           
  2978                           ;Usb.c: 492: else if (request == 0x06)
  2979  025F  3006               	movlw	6
  2980  0260  0677               	xorwf	ProcessStandardRequest@request,w
  2981  0261  1D03               	btfss	3,2
  2982  0262  2A66               	goto	i1l1735
  2983                           
  2984                           ;Usb.c: 493: {
  2985                           ;Usb.c: 494: GetDescriptor();
  2986  0263  3184  2442         	fcall	_GetDescriptor
  2987                           
  2988                           ;Usb.c: 495: }
  2989  0265  0008               	return
  2990  0266                     i1l1735:	
  2991                           
  2992                           ;Usb.c: 496: else if (request == 0x09)
  2993  0266  3009               	movlw	9
  2994  0267  0677               	xorwf	ProcessStandardRequest@request,w
  2995  0268  1D03               	btfss	3,2
  2996  0269  2A80               	goto	i1l1749
  2997                           
  2998                           ;Usb.c: 497: {
  2999                           ;Usb.c: 498: RequestHandled = 1;
  3000  026A  0020               	movlb	0	; select bank0
  3001  026B  01BB               	clrf	_RequestHandled
  3002  026C  0ABB               	incf	_RequestHandled,f
  3003                           
  3004                           ;Usb.c: 499: CurrentConfiguration = SetupPacket.wValue0;
  3005  026D  0842               	movf	_SetupPacket+2,w	;volatile
  3006  026E  00F6               	movwf	??_ProcessStandardRequest
  3007  026F  0876               	movf	??_ProcessStandardRequest,w
  3008  0270  00E1               	movwf	_CurrentConfiguration
  3009                           
  3010                           ;Usb.c: 502: if (CurrentConfiguration == 0)
  3011  0271  0861               	movf	_CurrentConfiguration,w
  3012  0272  1D03               	btfss	3,2
  3013  0273  2A79               	goto	i1l1745
  3014                           
  3015                           ;Usb.c: 505: DeviceState = 0x04;
  3016  0274  3004               	movlw	4
  3017  0275  00F6               	movwf	??_ProcessStandardRequest
  3018  0276  0876               	movf	??_ProcessStandardRequest,w
  3019  0277  00B7               	movwf	_DeviceState
  3020  0278  0008               	return
  3021  0279                     i1l1745:	
  3022                           
  3023                           ;Usb.c: 506: else
  3024                           ;Usb.c: 507: {
  3025                           ;Usb.c: 509: DeviceState = 0x05;
  3026  0279  3005               	movlw	5
  3027  027A  00F6               	movwf	??_ProcessStandardRequest
  3028  027B  0876               	movf	??_ProcessStandardRequest,w
  3029  027C  00B7               	movwf	_DeviceState
  3030                           
  3031                           ;Usb.c: 512: HIDInitEndpoints();
  3032  027D  3180  20CB         	fcall	_HIDInitEndpoints
  3033                           
  3034                           ;Usb.c: 516: }
  3035                           ;Usb.c: 517: }
  3036  027F  0008               	return
  3037  0280                     i1l1749:	
  3038                           
  3039                           ;Usb.c: 518: else if (request == 0x08)
  3040  0280  3008               	movlw	8
  3041  0281  0677               	xorwf	ProcessStandardRequest@request,w
  3042  0282  1D03               	btfss	3,2
  3043  0283  2A91               	goto	i1l1757
  3044                           
  3045                           ;Usb.c: 519: {
  3046                           ;Usb.c: 520: RequestHandled = 1;
  3047  0284  0020               	movlb	0	; select bank0
  3048  0285  01BB               	clrf	_RequestHandled
  3049  0286  0ABB               	incf	_RequestHandled,f
  3050                           
  3051                           ;Usb.c: 521: outPtr = (BYTE*)&CurrentConfiguration;
  3052  0287  3061               	movlw	(low (_CurrentConfiguration| 0))& (0+255)
  3053  0288  00F6               	movwf	??_ProcessStandardRequest
  3054  0289  0876               	movf	??_ProcessStandardRequest,w
  3055  028A  00BE               	movwf	_outPtr
  3056                           
  3057                           ;Usb.c: 522: wCount = 1;
  3058  028B  3001               	movlw	1
  3059  028C  00B2               	movwf	_wCount
  3060  028D  3000               	movlw	0
  3061  028E  00B3               	movwf	_wCount+1
  3062                           
  3063                           ;Usb.c: 523: transferType=0;
  3064  028F  01BF               	clrf	_transferType
  3065                           
  3066                           ;Usb.c: 524: }
  3067  0290  0008               	return
  3068  0291                     i1l1757:	
  3069                           
  3070                           ;Usb.c: 525: else if (request == 0x00)
  3071  0291  0877               	movf	ProcessStandardRequest@request,w
  3072  0292  1D03               	btfss	3,2
  3073  0293  2A97               	goto	i1l1761
  3074                           
  3075                           ;Usb.c: 526: {
  3076                           ;Usb.c: 527: GetStatus();
  3077  0294  3185  2546         	fcall	_GetStatus
  3078                           
  3079                           ;Usb.c: 528: }
  3080  0296  0008               	return
  3081  0297                     i1l1761:	
  3082                           
  3083                           ;Usb.c: 529: else if ((request == 0x01) ||
  3084                           ;Usb.c: 530: (request == 0x03))
  3085  0297  0377               	decf	ProcessStandardRequest@request,w
  3086  0298  1903               	btfsc	3,2
  3087  0299  2A9E               	goto	i1l1765
  3088  029A  3003               	movlw	3
  3089  029B  0677               	xorwf	ProcessStandardRequest@request,w
  3090  029C  1D03               	btfss	3,2
  3091  029D  2AA1               	goto	i1l1767
  3092  029E                     i1l1765:	
  3093                           
  3094                           ;Usb.c: 531: {
  3095                           ;Usb.c: 532: SetFeature();
  3096  029E  3183  2384         	fcall	_SetFeature
  3097                           
  3098                           ;Usb.c: 533: }
  3099  02A0  0008               	return
  3100  02A1                     i1l1767:	
  3101                           
  3102                           ;Usb.c: 534: else if (request == 0x0A)
  3103  02A1  300A               	movlw	10
  3104  02A2  0677               	xorwf	ProcessStandardRequest@request,w
  3105  02A3  1D03               	btfss	3,2
  3106  02A4  2AB3               	goto	i1l1777
  3107                           
  3108                           ;Usb.c: 535: {
  3109                           ;Usb.c: 538: RequestHandled = 1;
  3110  02A5  0020               	movlb	0	; select bank0
  3111  02A6  01BB               	clrf	_RequestHandled
  3112  02A7  0ABB               	incf	_RequestHandled,f
  3113                           
  3114                           ;Usb.c: 539: ControlTransferBuffer[0] = 0;
  3115  02A8  01C9               	clrf	_ControlTransferBuffer	;volatile
  3116                           
  3117                           ;Usb.c: 540: outPtr = (BYTE*)&ControlTransferBuffer;
  3118  02A9  3049               	movlw	(low (_ControlTransferBuffer| 0))& (0+255)
  3119  02AA  00F6               	movwf	??_ProcessStandardRequest
  3120  02AB  0876               	movf	??_ProcessStandardRequest,w
  3121  02AC  00BE               	movwf	_outPtr
  3122                           
  3123                           ;Usb.c: 541: wCount = 1;
  3124  02AD  3001               	movlw	1
  3125  02AE  00B2               	movwf	_wCount
  3126  02AF  3000               	movlw	0
  3127  02B0  00B3               	movwf	_wCount+1
  3128                           
  3129                           ;Usb.c: 542: transferType=0;
  3130  02B1  01BF               	clrf	_transferType
  3131                           
  3132                           ;Usb.c: 543: }
  3133  02B2  0008               	return
  3134  02B3                     i1l1777:	
  3135                           
  3136                           ;Usb.c: 544: else if (request == 0x0B)
  3137  02B3  300B               	movlw	11
  3138  02B4  0677               	xorwf	ProcessStandardRequest@request,w
  3139  02B5  1D03               	btfss	3,2
  3140  02B6  0008               	return
  3141                           
  3142                           ;Usb.c: 545: {
  3143                           ;Usb.c: 547: RequestHandled = 1;
  3144  02B7  0020               	movlb	0	; select bank0
  3145  02B8  01BB               	clrf	_RequestHandled
  3146  02B9  0ABB               	incf	_RequestHandled,f
  3147                           
  3148                           ;Usb.c: 555: else
  3149                           ;Usb.c: 556: {
  3150                           
  3151                           ;Usb.c: 553: {
  3152                           ;Usb.c: 554: }
  3153                           
  3154                           ;Usb.c: 550: {
  3155                           ;Usb.c: 551: }
  3156                           
  3157                           ;Usb.c: 548: }
  3158  02BA  0008               	return
  3159  02BB                     __end_of_ProcessStandardRequest:	
  3160                           
  3161                           	psect	text22
  3162  0384                     __ptext22:	
  3163 ;; *************** function _SetFeature *****************
  3164 ;; Defined at:
  3165 ;;		line 427 in file "Source/Usb.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  endpointDir     1    5[COMMON] unsigned char 
  3170 ;;  endpointNum     1    4[COMMON] unsigned char 
  3171 ;;  feature         1    3[COMMON] unsigned char 
  3172 ;;  recipient       1    2[COMMON] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3183 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;Total ram usage:        6 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_ProcessStandardRequest
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           
  3196                           ;psect for function _SetFeature
  3197  0384                     _SetFeature:	
  3198                           
  3199                           ;Usb.c: 429: BYTE recipient = SetupPacket.bmRequestType & 0x1F;
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _SetFeature: [wreg+fsr1l+fsr1h+status,2+status,0]
  3203  0384  0020               	movlb	0	; select bank0
  3204  0385  0840               	movf	_SetupPacket,w	;volatile
  3205  0386  391F               	andlw	31
  3206  0387  00F0               	movwf	??_SetFeature
  3207  0388  0870               	movf	??_SetFeature,w
  3208  0389  00F2               	movwf	SetFeature@recipient
  3209                           
  3210                           ;Usb.c: 430: BYTE feature = SetupPacket.wValue0;
  3211  038A  0842               	movf	_SetupPacket+2,w	;volatile
  3212  038B  00F0               	movwf	??_SetFeature
  3213  038C  0870               	movf	??_SetFeature,w
  3214  038D  00F3               	movwf	SetFeature@feature
  3215                           
  3216                           ;Usb.c: 432: if (recipient == 0x00)
  3217  038E  0872               	movf	SetFeature@recipient,w
  3218  038F  1D03               	btfss	3,2
  3219  0390  2B9F               	goto	i1l1613
  3220                           
  3221                           ;Usb.c: 433: {
  3222                           ;Usb.c: 435: if (feature == 0x01)
  3223  0391  0373               	decf	SetFeature@feature,w
  3224  0392  1D03               	btfss	3,2
  3225  0393  0008               	return
  3226                           
  3227                           ;Usb.c: 436: {
  3228                           ;Usb.c: 437: RequestHandled = 1;
  3229  0394  01BB               	clrf	_RequestHandled
  3230  0395  0ABB               	incf	_RequestHandled,f
  3231                           
  3232                           ;Usb.c: 438: if (SetupPacket.bRequest == 0x03)
  3233  0396  3003               	movlw	3
  3234  0397  0641               	xorwf	_SetupPacket+1,w	;volatile
  3235  0398  1D03               	btfss	3,2
  3236  0399  2B9D               	goto	i1l1611
  3237                           
  3238                           ;Usb.c: 439: RemoteWakeup = 1;
  3239  039A  01BA               	clrf	_RemoteWakeup
  3240  039B  0ABA               	incf	_RemoteWakeup,f
  3241  039C  0008               	return
  3242  039D                     i1l1611:	
  3243                           
  3244                           ;Usb.c: 440: else
  3245                           ;Usb.c: 441: RemoteWakeup = 0;
  3246  039D  01BA               	clrf	_RemoteWakeup
  3247                           
  3248                           ;Usb.c: 442: }
  3249                           ;Usb.c: 444: }
  3250  039E  0008               	return
  3251  039F                     i1l1613:	
  3252                           
  3253                           ;Usb.c: 445: else if (recipient == 0x02)
  3254  039F  3002               	movlw	2
  3255  03A0  0672               	xorwf	SetFeature@recipient,w
  3256  03A1  1D03               	btfss	3,2
  3257  03A2  0008               	return
  3258                           
  3259                           ;Usb.c: 446: {
  3260                           ;Usb.c: 448: BYTE endpointNum = SetupPacket.wIndex0 & 0x0F;
  3261  03A3  0844               	movf	_SetupPacket+4,w	;volatile
  3262  03A4  390F               	andlw	15
  3263  03A5  00F0               	movwf	??_SetFeature
  3264  03A6  0870               	movf	??_SetFeature,w
  3265  03A7  00F4               	movwf	SetFeature@endpointNum
  3266                           
  3267                           ;Usb.c: 449: BYTE endpointDir = SetupPacket.wIndex0 & 0x80;
  3268  03A8  0844               	movf	_SetupPacket+4,w	;volatile
  3269  03A9  3980               	andlw	128
  3270  03AA  00F0               	movwf	??_SetFeature
  3271  03AB  0870               	movf	??_SetFeature,w
  3272  03AC  00F5               	movwf	SetFeature@endpointDir
  3273                           
  3274                           ;Usb.c: 450: if ((feature == 0x00) && (endpointNum != 0))
  3275  03AD  0873               	movf	SetFeature@feature,w
  3276  03AE  1D03               	btfss	3,2
  3277  03AF  0008               	return
  3278  03B0  0874               	movf	SetFeature@endpointNum,w
  3279  03B1  1903               	btfsc	3,2
  3280  03B2  0008               	return
  3281                           
  3282                           ;Usb.c: 451: {
  3283                           ;Usb.c: 453: RequestHandled = 1;
  3284  03B3  01BB               	clrf	_RequestHandled
  3285  03B4  0ABB               	incf	_RequestHandled,f
  3286                           
  3287                           ;Usb.c: 456: inPtr = (BYTE *)&Interfaces[0].Output + (endpointNum * 8);
  3288  03B5  0874               	movf	SetFeature@endpointNum,w
  3289  03B6  00F0               	movwf	??_SetFeature
  3290  03B7  3002               	movlw	2
  3291  03B8                     u160_25:	
  3292  03B8  35F0               	lslf	??_SetFeature,f
  3293  03B9  3EFF               	addlw	-1
  3294  03BA  1D03               	skipz
  3295  03BB  2BB8               	goto	u160_25
  3296  03BC  3570               	lslf	??_SetFeature,w
  3297  03BD  3E20               	addlw	32
  3298  03BE  00F1               	movwf	??_SetFeature+1
  3299  03BF  0871               	movf	??_SetFeature+1,w
  3300  03C0  00BD               	movwf	_inPtr
  3301                           
  3302                           ;Usb.c: 457: if (endpointDir)
  3303  03C1  0875               	movf	SetFeature@endpointDir,w
  3304  03C2  1903               	btfsc	3,2
  3305  03C3  2BC8               	goto	i1l274
  3306                           
  3307                           ;Usb.c: 458: inPtr += 4;
  3308  03C4  3004               	movlw	4
  3309  03C5  00F0               	movwf	??_SetFeature
  3310  03C6  0870               	movf	??_SetFeature,w
  3311  03C7  07BD               	addwf	_inPtr,f
  3312  03C8                     i1l274:	
  3313                           
  3314                           ;Usb.c: 460: if(SetupPacket.bRequest == 0x03)
  3315  03C8  3003               	movlw	3
  3316  03C9  0641               	xorwf	_SetupPacket+1,w	;volatile
  3317  03CA  1D03               	btfss	3,2
  3318  03CB  2BD4               	goto	i1l1629
  3319                           
  3320                           ;Usb.c: 461: *inPtr = 0x84;
  3321  03CC  3084               	movlw	132
  3322  03CD  00F0               	movwf	??_SetFeature
  3323  03CE  083D               	movf	_inPtr,w
  3324  03CF  0086               	movwf	6
  3325  03D0  0187               	clrf	7
  3326  03D1  0870               	movf	??_SetFeature,w
  3327  03D2  0081               	movwf	1
  3328  03D3  0008               	return
  3329  03D4                     i1l1629:	
  3330                           
  3331                           ;Usb.c: 462: else
  3332                           ;Usb.c: 463: {
  3333                           ;Usb.c: 464: if(endpointDir == 1)
  3334  03D4  0375               	decf	SetFeature@endpointDir,w
  3335  03D5  1D03               	btfss	3,2
  3336  03D6  2BDC               	goto	i1l1633
  3337                           
  3338                           ;Usb.c: 465: *inPtr = 0x00;
  3339  03D7  083D               	movf	_inPtr,w
  3340  03D8  0086               	movwf	6
  3341  03D9  0187               	clrf	7
  3342  03DA  0181               	clrf	1
  3343  03DB  0008               	return
  3344  03DC                     i1l1633:	
  3345                           
  3346                           ;Usb.c: 466: else
  3347                           ;Usb.c: 467: *inPtr = 0x88;
  3348  03DC  3088               	movlw	136
  3349  03DD  00F0               	movwf	??_SetFeature
  3350  03DE  083D               	movf	_inPtr,w
  3351  03DF  0086               	movwf	6
  3352  03E0  0187               	clrf	7
  3353  03E1  0870               	movf	??_SetFeature,w
  3354  03E2  0081               	movwf	1
  3355  03E3  0008               	return
  3356  03E4                     __end_of_SetFeature:	
  3357                           
  3358                           	psect	text23
  3359  00CB                     __ptext23:	
  3360 ;; *************** function _HIDInitEndpoints *****************
  3361 ;; Defined at:
  3362 ;;		line 231 in file "Source/Usb.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  i               1    4[COMMON] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;Total ram usage:        5 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_ProcessStandardRequest
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           
  3390                           ;psect for function _HIDInitEndpoints
  3391  00CB                     _HIDInitEndpoints:	
  3392                           
  3393                           ;Usb.c: 233: BYTE i = 0;
  3394                           
  3395                           ;incstack = 0
  3396                           ; Regs used in _HIDInitEndpoints: [wreg+fsr1l+fsr1h+status,2+status,0]
  3397  00CB  01F4               	clrf	HIDInitEndpoints@i
  3398                           
  3399                           ;Usb.c: 235: HidRxLen =0;
  3400  00CC  0020               	movlb	0	; select bank0
  3401  00CD  01B9               	clrf	_HidRxLen
  3402                           
  3403                           ;Usb.c: 237: for (i = 0 ; i < 0x01; i++)
  3404  00CE  01F4               	clrf	HIDInitEndpoints@i
  3405  00CF                     L3:	
  3406  00CF  0874               	movf	HIDInitEndpoints@i,w
  3407  00D0  1D03               	btfss	3,2
  3408  00D1  0008               	return
  3409                           
  3410                           ;Usb.c: 238: {
  3411                           ;Usb.c: 240: EndpointFlags[i] = 0x1E;
  3412  00D2  301E               	movlw	30
  3413  00D3  00F0               	movwf	??_HIDInitEndpoints
  3414  00D4  0874               	movf	HIDInitEndpoints@i,w
  3415  00D5  3E99               	addlw	153
  3416  00D6  0086               	movwf	6
  3417  00D7  300E               	movlw	14	; select bank29/30
  3418  00D8  0087               	movwf	7
  3419  00D9  0870               	movf	??_HIDInitEndpoints,w
  3420  00DA  0081               	movwf	1
  3421                           
  3422                           ;Usb.c: 242: Interfaces[i + 1].Output.Cnt = Buffers[(i * 2) + 1].Size;
  3423  00DB  3574               	lslf	HIDInitEndpoints@i,w
  3424  00DC  0709               	addwf	9,w
  3425  00DD  3E02               	addlw	2
  3426  00DE  3E64               	addlw	(low (_Buffers| 0))& (0+255)
  3427  00DF  0086               	movwf	6
  3428  00E0  0187               	clrf	7
  3429  00E1  0801               	movf	1,w
  3430  00E2  00F0               	movwf	??_HIDInitEndpoints
  3431  00E3  0874               	movf	HIDInitEndpoints@i,w
  3432  00E4  00F1               	movwf	??_HIDInitEndpoints+1
  3433  00E5  3002               	movlw	2
  3434  00E6                     u133_25:	
  3435  00E6  35F1               	lslf	??_HIDInitEndpoints+1,f
  3436  00E7  3EFF               	addlw	-1
  3437  00E8  1D03               	skipz
  3438  00E9  28E6               	goto	u133_25
  3439  00EA  3571               	lslf	??_HIDInitEndpoints+1,w
  3440  00EB  3E09               	addlw	9
  3441  00EC  3E20               	addlw	32
  3442  00ED  0086               	movwf	6
  3443  00EE  0187               	clrf	7
  3444  00EF  0870               	movf	??_HIDInitEndpoints,w
  3445  00F0  0081               	movwf	1
  3446                           
  3447                           ;Usb.c: 245: Interfaces[i + 1].Output.ADDR = ((unsigned int)(((unsigned long)Buffers[(i 
      +                          * 2) + 1].Buffer) & 0xFFFF));
  3448  00F1  3574               	lslf	HIDInitEndpoints@i,w
  3449  00F2  0709               	addwf	9,w
  3450  00F3  3E03               	addlw	3
  3451  00F4  3E64               	addlw	(low (_Buffers| 0))& (0+255)
  3452  00F5  0086               	movwf	6
  3453  00F6  0187               	clrf	7
  3454  00F7  0801               	movf	1,w
  3455  00F8  00F0               	movwf	??_HIDInitEndpoints
  3456  00F9  3000               	movlw	0
  3457  00FA  00F1               	movwf	??_HIDInitEndpoints+1
  3458  00FB  0874               	movf	HIDInitEndpoints@i,w
  3459  00FC  00F2               	movwf	??_HIDInitEndpoints+2
  3460  00FD  3002               	movlw	2
  3461  00FE                     u134_25:	
  3462  00FE  35F2               	lslf	??_HIDInitEndpoints+2,f
  3463  00FF  3EFF               	addlw	-1
  3464  0100  1D03               	skipz
  3465  0101  28FE               	goto	u134_25
  3466  0102  3572               	lslf	??_HIDInitEndpoints+2,w
  3467  0103  3E0A               	addlw	10
  3468  0104  3E20               	addlw	32
  3469  0105  0086               	movwf	6
  3470  0106  0187               	clrf	7
  3471  0107  0870               	movf	??_HIDInitEndpoints,w
  3472  0108  3FC0               	movwi [0]fsr1
  3473  0109  0871               	movf	??_HIDInitEndpoints+1,w
  3474  010A  3FC1               	movwi [1]fsr1
  3475                           
  3476                           ;Usb.c: 247: Interfaces[i + 1].Output.Stat = 0x80 | 0x08;
  3477  010B  3088               	movlw	136
  3478  010C  00F0               	movwf	??_HIDInitEndpoints
  3479  010D  0874               	movf	HIDInitEndpoints@i,w
  3480  010E  00F1               	movwf	??_HIDInitEndpoints+1
  3481  010F  3002               	movlw	2
  3482  0110                     u135_25:	
  3483  0110  35F1               	lslf	??_HIDInitEndpoints+1,f
  3484  0111  3EFF               	addlw	-1
  3485  0112  1D03               	skipz
  3486  0113  2910               	goto	u135_25
  3487  0114  3571               	lslf	??_HIDInitEndpoints+1,w
  3488  0115  3E08               	addlw	8
  3489  0116  3E20               	addlw	32
  3490  0117  0086               	movwf	6
  3491  0118  0187               	clrf	7
  3492  0119  0870               	movf	??_HIDInitEndpoints,w
  3493  011A  0081               	movwf	1
  3494                           
  3495                           ;Usb.c: 250: Interfaces[i + 1].Input.ADDR = ((unsigned int)(((unsigned long)Buffers[(i *
      +                           2)].Buffer) & 0xFFFF));
  3496  011B  0874               	movf	HIDInitEndpoints@i,w
  3497  011C  00F0               	movwf	??_HIDInitEndpoints
  3498  011D  3001               	movlw	1
  3499  011E                     u136_25:	
  3500  011E  35F0               	lslf	??_HIDInitEndpoints,f
  3501  011F  0B89               	decfsz	9,f
  3502  0120  291E               	goto	u136_25
  3503  0121  1403               	setc
  3504  0122  0D70               	rlf	??_HIDInitEndpoints,w
  3505  0123  3E64               	addlw	(low (_Buffers| 0))& (0+255)
  3506  0124  0086               	movwf	6
  3507  0125  0187               	clrf	7
  3508  0126  0801               	movf	1,w
  3509  0127  00F1               	movwf	??_HIDInitEndpoints+1
  3510  0128  3000               	movlw	0
  3511  0129  00F2               	movwf	??_HIDInitEndpoints+2
  3512  012A  0874               	movf	HIDInitEndpoints@i,w
  3513  012B  00F3               	movwf	??_HIDInitEndpoints+3
  3514  012C  3002               	movlw	2
  3515  012D                     u137_25:	
  3516  012D  35F3               	lslf	??_HIDInitEndpoints+3,f
  3517  012E  3EFF               	addlw	-1
  3518  012F  1D03               	skipz
  3519  0130  292D               	goto	u137_25
  3520  0131  3573               	lslf	??_HIDInitEndpoints+3,w
  3521  0132  3E0E               	addlw	14
  3522  0133  3E20               	addlw	32
  3523  0134  0086               	movwf	6
  3524  0135  0187               	clrf	7
  3525  0136  0871               	movf	??_HIDInitEndpoints+1,w
  3526  0137  3FC0               	movwi [0]fsr1
  3527  0138  0872               	movf	??_HIDInitEndpoints+2,w
  3528  0139  3FC1               	movwi [1]fsr1
  3529                           
  3530                           ;Usb.c: 251: Interfaces[i + 1].Input.Stat = 0x40;
  3531  013A  3040               	movlw	64
  3532  013B  00F0               	movwf	??_HIDInitEndpoints
  3533  013C  0874               	movf	HIDInitEndpoints@i,w
  3534  013D  00F1               	movwf	??_HIDInitEndpoints+1
  3535  013E  3002               	movlw	2
  3536  013F                     u138_25:	
  3537  013F  35F1               	lslf	??_HIDInitEndpoints+1,f
  3538  0140  3EFF               	addlw	-1
  3539  0141  1D03               	skipz
  3540  0142  293F               	goto	u138_25
  3541  0143  3571               	lslf	??_HIDInitEndpoints+1,w
  3542  0144  3E0C               	addlw	12
  3543  0145  3E20               	addlw	32
  3544  0146  0086               	movwf	6
  3545  0147  0187               	clrf	7
  3546  0148  0870               	movf	??_HIDInitEndpoints,w
  3547  0149  0081               	movwf	1
  3548  014A  3001               	movlw	1
  3549  014B  00F0               	movwf	??_HIDInitEndpoints
  3550  014C  0870               	movf	??_HIDInitEndpoints,w
  3551  014D  07F4               	addwf	HIDInitEndpoints@i,f
  3552  014E  28CF               	goto	L3
  3553  014F                     __end_of_HIDInitEndpoints:	
  3554                           
  3555                           	psect	text24
  3556  0546                     __ptext24:	
  3557 ;; *************** function _GetStatus *****************
  3558 ;; Defined at:
  3559 ;;		line 380 in file "Source/Usb.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;		None
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  endpointDir     1    3[COMMON] unsigned char 
  3564 ;;  endpointNum     1    2[COMMON] unsigned char 
  3565 ;;  recipient       1    4[COMMON] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3579 ;;Total ram usage:        5 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_ProcessStandardRequest
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function _GetStatus
  3590  0546                     _GetStatus:	
  3591                           
  3592                           ;Usb.c: 383: BYTE recipient = SetupPacket.bmRequestType & 0x1F;
  3593                           
  3594                           ;incstack = 0
  3595                           ; Regs used in _GetStatus: [wreg+fsr1l+fsr1h+status,2+status,0]
  3596  0546  0020               	movlb	0	; select bank0
  3597  0547  0840               	movf	_SetupPacket,w	;volatile
  3598  0548  391F               	andlw	31
  3599  0549  00F0               	movwf	??_GetStatus
  3600  054A  0870               	movf	??_GetStatus,w
  3601  054B  00F4               	movwf	GetStatus@recipient
  3602                           
  3603                           ;Usb.c: 384: ControlTransferBuffer[0] = 0;
  3604  054C  01C9               	clrf	_ControlTransferBuffer	;volatile
  3605                           
  3606                           ;Usb.c: 385: ControlTransferBuffer[1] = 0;
  3607  054D  01CA               	clrf	_ControlTransferBuffer+1	;volatile
  3608                           
  3609                           ;Usb.c: 388: if (recipient == 0x00)
  3610  054E  0874               	movf	GetStatus@recipient,w
  3611  054F  1D03               	btfss	3,2
  3612  0550  2D5B               	goto	i1l1571
  3613                           
  3614                           ;Usb.c: 389: {
  3615                           ;Usb.c: 391: RequestHandled = 1;
  3616  0551  01BB               	clrf	_RequestHandled
  3617  0552  0ABB               	incf	_RequestHandled,f
  3618                           
  3619                           ;Usb.c: 393: if (SelfPowered)
  3620  0553  083C               	movf	_SelfPowered,w
  3621  0554  1D03               	btfss	3,2
  3622                           
  3623                           ;Usb.c: 394: ControlTransferBuffer[0] |= 0x01;
  3624  0555  1449               	bsf	_ControlTransferBuffer,0	;volatile
  3625                           
  3626                           ;Usb.c: 395: if (RemoteWakeup)
  3627  0556  083A               	movf	_RemoteWakeup,w
  3628  0557  1903               	btfsc	3,2
  3629  0558  2D8D               	goto	i1l1591
  3630                           
  3631                           ;Usb.c: 396: ControlTransferBuffer[0] |= 0x02;
  3632  0559  14C9               	bsf	_ControlTransferBuffer,1	;volatile
  3633                           
  3634                           ;Usb.c: 397: }
  3635  055A  2D8D               	goto	i1l1591
  3636  055B                     i1l1571:	
  3637                           
  3638                           ;Usb.c: 398: else if (recipient == 0x01)
  3639  055B  0374               	decf	GetStatus@recipient,w
  3640  055C  1D03               	btfss	3,2
  3641  055D  2D61               	goto	i1l1575
  3642                           
  3643                           ;Usb.c: 399: {
  3644                           ;Usb.c: 401: RequestHandled = 1;
  3645  055E  01BB               	clrf	_RequestHandled
  3646  055F  0ABB               	incf	_RequestHandled,f
  3647                           
  3648                           ;Usb.c: 402: }
  3649  0560  2D8D               	goto	i1l1591
  3650  0561                     i1l1575:	
  3651                           
  3652                           ;Usb.c: 403: else if (recipient == 0x02)
  3653  0561  3002               	movlw	2
  3654  0562  0674               	xorwf	GetStatus@recipient,w
  3655  0563  1D03               	btfss	3,2
  3656  0564  2D8D               	goto	i1l1591
  3657                           
  3658                           ;Usb.c: 404: {
  3659                           ;Usb.c: 406: BYTE endpointNum = SetupPacket.wIndex0 & 0x0F;
  3660  0565  0844               	movf	_SetupPacket+4,w	;volatile
  3661  0566  390F               	andlw	15
  3662  0567  00F0               	movwf	??_GetStatus
  3663  0568  0870               	movf	??_GetStatus,w
  3664  0569  00F2               	movwf	GetStatus@endpointNum
  3665                           
  3666                           ;Usb.c: 407: BYTE endpointDir = SetupPacket.wIndex0 & 0x80;
  3667  056A  0844               	movf	_SetupPacket+4,w	;volatile
  3668  056B  3980               	andlw	128
  3669  056C  00F0               	movwf	??_GetStatus
  3670  056D  0870               	movf	??_GetStatus,w
  3671  056E  00F3               	movwf	GetStatus@endpointDir
  3672                           
  3673                           ;Usb.c: 408: RequestHandled = 1;
  3674  056F  01BB               	clrf	_RequestHandled
  3675  0570  0ABB               	incf	_RequestHandled,f
  3676                           
  3677                           ;Usb.c: 411: inPtr = (BYTE *)&Interfaces[0].Output + (endpointNum * 8);
  3678  0571  0872               	movf	GetStatus@endpointNum,w
  3679  0572  00F0               	movwf	??_GetStatus
  3680  0573  3002               	movlw	2
  3681  0574                     u150_25:	
  3682  0574  35F0               	lslf	??_GetStatus,f
  3683  0575  3EFF               	addlw	-1
  3684  0576  1D03               	skipz
  3685  0577  2D74               	goto	u150_25
  3686  0578  3570               	lslf	??_GetStatus,w
  3687  0579  3E20               	addlw	32
  3688  057A  00F1               	movwf	??_GetStatus+1
  3689  057B  0871               	movf	??_GetStatus+1,w
  3690  057C  00BD               	movwf	_inPtr
  3691                           
  3692                           ;Usb.c: 412: if (endpointDir)
  3693  057D  0873               	movf	GetStatus@endpointDir,w
  3694  057E  1903               	btfsc	3,2
  3695  057F  2D84               	goto	i1l1587
  3696                           
  3697                           ;Usb.c: 413: inPtr += 4;
  3698  0580  3004               	movlw	4
  3699  0581  00F0               	movwf	??_GetStatus
  3700  0582  0870               	movf	??_GetStatus,w
  3701  0583  07BD               	addwf	_inPtr,f
  3702  0584                     i1l1587:	
  3703                           
  3704                           ;Usb.c: 414: if(*inPtr & 0x04)
  3705  0584  083D               	movf	_inPtr,w
  3706  0585  0086               	movwf	6
  3707  0586  0187               	clrf	7
  3708  0587  1D01               	btfss	1,2
  3709  0588  2D8D               	goto	i1l1591
  3710                           
  3711                           ;Usb.c: 415: ControlTransferBuffer[0] = 0x01;
  3712  0589  3001               	movlw	1
  3713  058A  00F0               	movwf	??_GetStatus
  3714  058B  0870               	movf	??_GetStatus,w
  3715  058C  00C9               	movwf	_ControlTransferBuffer	;volatile
  3716  058D                     i1l1591:	
  3717                           
  3718                           ;Usb.c: 416: }
  3719                           ;Usb.c: 418: if (RequestHandled)
  3720  058D  083B               	movf	_RequestHandled,w
  3721  058E  1903               	btfsc	3,2
  3722  058F  0008               	return
  3723                           
  3724                           ;Usb.c: 419: {
  3725                           ;Usb.c: 420: outPtr = (BYTE *)&ControlTransferBuffer;
  3726  0590  3049               	movlw	(low (_ControlTransferBuffer| 0))& (0+255)
  3727  0591  00F0               	movwf	??_GetStatus
  3728  0592  0870               	movf	??_GetStatus,w
  3729  0593  00BE               	movwf	_outPtr
  3730                           
  3731                           ;Usb.c: 421: wCount = 2;
  3732  0594  3002               	movlw	2
  3733  0595  00B2               	movwf	_wCount
  3734  0596  3000               	movlw	0
  3735  0597  00B3               	movwf	_wCount+1
  3736                           
  3737                           ;Usb.c: 422: transferType=0;
  3738  0598  01BF               	clrf	_transferType
  3739  0599  0008               	return
  3740  059A                     __end_of_GetStatus:	
  3741                           
  3742                           	psect	text25
  3743  0442                     __ptext25:	
  3744 ;; *************** function _GetDescriptor *****************
  3745 ;; Defined at:
  3746 ;;		line 341 in file "Source/Usb.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  descriptorTy    1    4[COMMON] unsigned char 
  3751 ;;  descriptorIn    1    3[COMMON] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3765 ;;Total ram usage:        5 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		_ProcessStandardRequest
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _GetDescriptor
  3776  0442                     _GetDescriptor:	
  3777                           
  3778                           ;Usb.c: 343: if(SetupPacket.bmRequestType == 0x80)
  3779                           
  3780                           ;incstack = 0
  3781                           ; Regs used in _GetDescriptor: [wreg-fsr0h+status,2+status,0+pclath]
  3782  0442  3080               	movlw	128
  3783  0443  0020               	movlb	0	; select bank0
  3784  0444  0640               	xorwf	_SetupPacket,w	;volatile
  3785  0445  1D03               	btfss	3,2
  3786  0446  0008               	return
  3787                           
  3788                           ;Usb.c: 344: {
  3789                           ;Usb.c: 345: BYTE descriptorType = SetupPacket.wValue1;
  3790  0447  0843               	movf	_SetupPacket+3,w	;volatile
  3791  0448  00F0               	movwf	??_GetDescriptor
  3792  0449  0870               	movf	??_GetDescriptor,w
  3793  044A  00F4               	movwf	GetDescriptor@descriptorType
  3794                           
  3795                           ;Usb.c: 346: BYTE descriptorIndex = SetupPacket.wValue0;
  3796  044B  0842               	movf	_SetupPacket+2,w	;volatile
  3797  044C  00F0               	movwf	??_GetDescriptor
  3798  044D  0870               	movf	??_GetDescriptor,w
  3799  044E  00F3               	movwf	GetDescriptor@descriptorIndex
  3800                           
  3801                           ;Usb.c: 348: if (descriptorType == 0x01)
  3802  044F  0374               	decf	GetDescriptor@descriptorType,w
  3803  0450  1D03               	btfss	3,2
  3804  0451  2C5F               	goto	i1l1531
  3805                           
  3806                           ;Usb.c: 349: {
  3807                           ;Usb.c: 350: RequestHandled = 1;
  3808  0452  01BB               	clrf	_RequestHandled
  3809  0453  0ABB               	incf	_RequestHandled,f
  3810                           
  3811                           ;Usb.c: 351: ROMoutPtr = (const BYTE *) & DeviceDescriptor;
  3812  0454  30A9               	movlw	low (_DeviceDescriptor| (0+32768))
  3813  0455  00B0               	movwf	_ROMoutPtr
  3814  0456  3080               	movlw	high (_DeviceDescriptor| (0+32768))
  3815  0457  00B1               	movwf	_ROMoutPtr+1
  3816                           
  3817                           ;Usb.c: 352: wCount = sizeof(DeviceDescriptor);
  3818  0458  3012               	movlw	18
  3819  0459  00B2               	movwf	_wCount
  3820  045A  3000               	movlw	0
  3821  045B  00B3               	movwf	_wCount+1
  3822                           
  3823                           ;Usb.c: 353: transferType=1;
  3824  045C  01BF               	clrf	_transferType
  3825  045D  0ABF               	incf	_transferType,f
  3826                           
  3827                           ;Usb.c: 354: }
  3828  045E  0008               	return
  3829  045F                     i1l1531:	
  3830                           
  3831                           ;Usb.c: 355: else if (descriptorType == 0x02)
  3832  045F  3002               	movlw	2
  3833  0460  0674               	xorwf	GetDescriptor@descriptorType,w
  3834  0461  1D03               	btfss	3,2
  3835  0462  2C70               	goto	i1l1539
  3836                           
  3837                           ;Usb.c: 356: {
  3838                           ;Usb.c: 357: RequestHandled = 1;
  3839  0463  01BB               	clrf	_RequestHandled
  3840  0464  0ABB               	incf	_RequestHandled,f
  3841                           
  3842                           ;Usb.c: 358: ROMoutPtr = (const BYTE*)&ConfigurationDescriptor;
  3843  0465  3064               	movlw	low (_ConfigurationDescriptor| (0+32768))
  3844  0466  00B0               	movwf	_ROMoutPtr
  3845  0467  3080               	movlw	high (_ConfigurationDescriptor| (0+32768))
  3846  0468  00B1               	movwf	_ROMoutPtr+1
  3847                           
  3848                           ;Usb.c: 359: wCount = sizeof(ConfigurationDescriptor);
  3849  0469  3029               	movlw	41
  3850  046A  00B2               	movwf	_wCount
  3851  046B  3000               	movlw	0
  3852  046C  00B3               	movwf	_wCount+1
  3853                           
  3854                           ;Usb.c: 360: transferType=1;
  3855  046D  01BF               	clrf	_transferType
  3856  046E  0ABF               	incf	_transferType,f
  3857                           
  3858                           ;Usb.c: 361: }
  3859  046F  0008               	return
  3860  0470                     i1l1539:	
  3861                           
  3862                           ;Usb.c: 362: else if (descriptorType == 0x03)
  3863  0470  3003               	movlw	3
  3864  0471  0674               	xorwf	GetDescriptor@descriptorType,w
  3865  0472  1D03               	btfss	3,2
  3866  0473  0008               	return
  3867                           
  3868                           ;Usb.c: 363: {
  3869                           ;Usb.c: 364: RequestHandled = 1;
  3870  0474  01BB               	clrf	_RequestHandled
  3871  0475  0ABB               	incf	_RequestHandled,f
  3872                           
  3873                           ;Usb.c: 365: if(descriptorIndex >= 0x03)
  3874  0476  3003               	movlw	3
  3875  0477  0273               	subwf	GetDescriptor@descriptorIndex,w
  3876  0478  1C03               	skipc
  3877  0479  2C7E               	goto	i1l1547
  3878                           
  3879                           ;Usb.c: 366: ROMoutPtr = (const BYTE*)&StringDescriptor0;
  3880  047A  30C8               	movlw	low (_StringDescriptor0| (0+32768))
  3881  047B  00B0               	movwf	_ROMoutPtr
  3882  047C  3080               	movlw	high (_StringDescriptor0| (0+32768))
  3883  047D  2C8C               	goto	L4
  3884  047E                     i1l1547:	
  3885                           
  3886                           ;Usb.c: 367: else
  3887                           ;Usb.c: 368: ROMoutPtr = *(StringDescriptorPointers + descriptorIndex);
  3888  047E  0873               	movf	GetDescriptor@descriptorIndex,w
  3889  047F  00F0               	movwf	??_GetDescriptor
  3890  0480  01F1               	clrf	??_GetDescriptor+1
  3891  0481  35F0               	lslf	??_GetDescriptor,f
  3892  0482  0DF1               	rlf	??_GetDescriptor+1,f
  3893  0483  302F               	movlw	low (_StringDescriptorPointers| (0+32768))
  3894  0484  0770               	addwf	??_GetDescriptor,w
  3895  0485  0084               	movwf	4
  3896  0486  3080               	movlw	high (_StringDescriptorPointers| (0+32768))
  3897  0487  3D71               	addwfc	??_GetDescriptor+1,w
  3898  0488  0085               	movwf	5
  3899  0489  3F00               	moviw [0]fsr0
  3900  048A  00B0               	movwf	_ROMoutPtr
  3901  048B  3F01               	moviw [1]fsr0
  3902  048C                     L4:	
  3903  048C  00B1               	movwf	_ROMoutPtr+1
  3904                           
  3905                           ;Usb.c: 370: wCount = *ROMoutPtr;
  3906  048D  0830               	movf	_ROMoutPtr,w
  3907  048E  0084               	movwf	4
  3908  048F  0831               	movf	_ROMoutPtr+1,w
  3909  0490  0085               	movwf	5
  3910  0491  0800               	movf	0,w	;code access
  3911  0492  00F0               	movwf	??_GetDescriptor
  3912  0493  01F1               	clrf	??_GetDescriptor+1
  3913  0494  0870               	movf	??_GetDescriptor,w
  3914  0495  00B2               	movwf	_wCount
  3915  0496  0871               	movf	??_GetDescriptor+1,w
  3916  0497  00B3               	movwf	_wCount+1
  3917                           
  3918                           ;Usb.c: 371: transferType=1;
  3919  0498  01BF               	clrf	_transferType
  3920  0499  0ABF               	incf	_transferType,f
  3921                           
  3922                           ;Usb.c: 373: else
  3923                           ;Usb.c: 374: {
  3924                           
  3925                           ;Usb.c: 372: }
  3926  049A  0008               	return
  3927  049B                     __end_of_GetDescriptor:	
  3928                           
  3929                           	psect	text26
  3930  01CC                     __ptext26:	
  3931 ;; *************** function _ProcessHIDRequest *****************
  3932 ;; Defined at:
  3933 ;;		line 256 in file "Source/Usb.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  descriptorTy    1    1[COMMON] unsigned char 
  3938 ;;  bRequest        1    2[COMMON] unsigned char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3951 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3952 ;;Total ram usage:        3 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_SetupStage
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _ProcessHIDRequest
  3963  01CC                     _ProcessHIDRequest:	
  3964                           
  3965                           ;Usb.c: 258: BYTE bRequest;
  3966                           ;Usb.c: 261: if((SetupPacket.bmRequestType & 0x1F) != 0x01 || (SetupPacket.wIndex0 != 0x
      +                          00)) return;
  3967                           
  3968                           ;incstack = 0
  3969                           ; Regs used in _ProcessHIDRequest: [wreg+status,2+status,0]
  3970  01CC  301F               	movlw	31
  3971  01CD  0020               	movlb	0	; select bank0
  3972  01CE  0540               	andwf	_SetupPacket,w	;volatile
  3973  01CF  00F0               	movwf	??_ProcessHIDRequest
  3974  01D0  0370               	decf	??_ProcessHIDRequest,w
  3975  01D1  1D03               	btfss	3,2
  3976  01D2  0008               	return
  3977  01D3  0844               	movf	_SetupPacket+4,w	;volatile
  3978  01D4  1D03               	btfss	3,2
  3979  01D5  0008               	return
  3980                           
  3981                           ;Usb.c: 263: bRequest = SetupPacket.bRequest;
  3982  01D6  0841               	movf	_SetupPacket+1,w	;volatile
  3983  01D7  00F0               	movwf	??_ProcessHIDRequest
  3984  01D8  0870               	movf	??_ProcessHIDRequest,w
  3985  01D9  00F2               	movwf	ProcessHIDRequest@bRequest
  3986                           
  3987                           ;Usb.c: 265: if (bRequest == 0x06)
  3988  01DA  3006               	movlw	6
  3989  01DB  0672               	xorwf	ProcessHIDRequest@bRequest,w
  3990  01DC  1D03               	btfss	3,2
  3991  01DD  29FE               	goto	i1l1679
  3992                           
  3993                           ;Usb.c: 266: {
  3994                           ;Usb.c: 268: BYTE descriptorType = SetupPacket.wValue1;
  3995  01DE  0843               	movf	_SetupPacket+3,w	;volatile
  3996  01DF  00F0               	movwf	??_ProcessHIDRequest
  3997  01E0  0870               	movf	??_ProcessHIDRequest,w
  3998  01E1  00F1               	movwf	ProcessHIDRequest@descriptorType
  3999                           
  4000                           ;Usb.c: 269: if (descriptorType == 0x21)
  4001  01E2  3021               	movlw	33
  4002  01E3  0671               	xorwf	ProcessHIDRequest@descriptorType,w
  4003  01E4  1D03               	btfss	3,2
  4004  01E5  29EE               	goto	i1l1667
  4005                           
  4006                           ;Usb.c: 270: {
  4007                           ;Usb.c: 271: RequestHandled = 1;
  4008  01E6  01BB               	clrf	_RequestHandled
  4009  01E7  0ABB               	incf	_RequestHandled,f
  4010                           
  4011                           ;Usb.c: 272: ROMoutPtr = (const BYTE*)&ConfigurationDescriptor.HIDDescriptor;
  4012  01E8  306D               	movlw	low ((_ConfigurationDescriptor| (0+32768)+9))
  4013  01E9  00B0               	movwf	_ROMoutPtr
  4014  01EA  3080               	movlw	high ((_ConfigurationDescriptor| (0+32768)+9))
  4015  01EB  00B1               	movwf	_ROMoutPtr+1
  4016                           
  4017                           ;Usb.c: 273: wCount = sizeof(ConfigurationDescriptor.HIDDescriptor);
  4018  01EC  3020               	movlw	32
  4019  01ED  29F9               	goto	L5
  4020  01EE                     i1l1667:	
  4021                           ;Usb.c: 275: }
  4022                           
  4023                           ;Usb.c: 274: transferType=1;
  4024                           
  4025                           
  4026                           ;Usb.c: 276: else if (descriptorType == 0x22)
  4027  01EE  3022               	movlw	34
  4028  01EF  0671               	xorwf	ProcessHIDRequest@descriptorType,w
  4029  01F0  1D03               	btfss	3,2
  4030  01F1  29FE               	goto	i1l1679
  4031                           
  4032                           ;Usb.c: 277: {
  4033                           ;Usb.c: 278: RequestHandled = 1;
  4034  01F2  01BB               	clrf	_RequestHandled
  4035  01F3  0ABB               	incf	_RequestHandled,f
  4036                           
  4037                           ;Usb.c: 279: ROMoutPtr = (const BYTE*)HIDReport;
  4038  01F4  3035               	movlw	low (_HIDReport| (0+32768))
  4039  01F5  00B0               	movwf	_ROMoutPtr
  4040  01F6  3080               	movlw	high (_HIDReport| (0+32768))
  4041  01F7  00B1               	movwf	_ROMoutPtr+1
  4042                           
  4043                           ;Usb.c: 280: wCount = sizeof(HIDReport);
  4044  01F8  302F               	movlw	47
  4045  01F9                     L5:	
  4046  01F9  00B2               	movwf	_wCount
  4047  01FA  3000               	movlw	0
  4048  01FB  00B3               	movwf	_wCount+1
  4049                           
  4050                           ;Usb.c: 281: transferType=1;
  4051  01FC  01BF               	clrf	_transferType
  4052  01FD  0ABF               	incf	_transferType,f
  4053  01FE                     i1l1679:	
  4054                           ;Usb.c: 286: else
  4055                           ;Usb.c: 287: {
  4056                           
  4057                           ;Usb.c: 284: {
  4058                           ;Usb.c: 285: }
  4059                           
  4060                           ;Usb.c: 282: }
  4061                           
  4062                           
  4063                           ;Usb.c: 288: }
  4064                           ;Usb.c: 289: }
  4065                           ;Usb.c: 291: if ((SetupPacket.bmRequestType & 0x60) != 0x20)
  4066  01FE  3060               	movlw	96
  4067  01FF  0540               	andwf	_SetupPacket,w	;volatile
  4068  0200  00F0               	movwf	??_ProcessHIDRequest
  4069  0201  3020               	movlw	32
  4070  0202  0670               	xorwf	??_ProcessHIDRequest,w
  4071  0203  1D03               	btfss	3,2
  4072  0204  0008               	return
  4073                           
  4074                           ;Usb.c: 294: }
  4075                           ;Usb.c: 297: if (bRequest == 0x01)
  4076                           
  4077                           ;Usb.c: 292: {
  4078                           ;Usb.c: 293: return;
  4079  0205  0372               	decf	ProcessHIDRequest@bRequest,w
  4080  0206  1903               	btfsc	3,2
  4081  0207  0008               	return
  4082                           
  4083                           ;Usb.c: 301: else if (bRequest == 0x09)
  4084                           
  4085                           ;Usb.c: 298: {
  4086                           ;Usb.c: 299: }
  4087  0208  3009               	movlw	9
  4088  0209  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4089  020A  1D03               	btfss	3,2
  4090  020B  2A11               	goto	i1l1691
  4091                           
  4092                           ;Usb.c: 302: {
  4093                           ;Usb.c: 303: HIDPostProcess = 1;
  4094  020C  01B8               	clrf	_HIDPostProcess
  4095  020D  0AB8               	incf	_HIDPostProcess,f
  4096                           
  4097                           ;Usb.c: 304: RequestHandled = 1;
  4098  020E  01BB               	clrf	_RequestHandled
  4099  020F  0ABB               	incf	_RequestHandled,f
  4100                           
  4101                           ;Usb.c: 305: }
  4102  0210  0008               	return
  4103  0211                     i1l1691:	
  4104                           
  4105                           ;Usb.c: 307: else if (bRequest == 0x02)
  4106  0211  3002               	movlw	2
  4107  0212  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4108  0213  1D03               	btfss	3,2
  4109  0214  2A21               	goto	i1l1699
  4110                           
  4111                           ;Usb.c: 308: {
  4112                           ;Usb.c: 309: RequestHandled = 1;
  4113  0215  01BB               	clrf	_RequestHandled
  4114  0216  0ABB               	incf	_RequestHandled,f
  4115                           
  4116                           ;Usb.c: 310: outPtr = &HidIdleRate;
  4117  0217  3062               	movlw	(low (_HidIdleRate| 0))& (0+255)
  4118  0218  00F0               	movwf	??_ProcessHIDRequest
  4119  0219  0870               	movf	??_ProcessHIDRequest,w
  4120  021A  00BE               	movwf	_outPtr
  4121                           
  4122                           ;Usb.c: 311: wCount = 1;
  4123  021B  3001               	movlw	1
  4124  021C  00B2               	movwf	_wCount
  4125  021D  3000               	movlw	0
  4126  021E  00B3               	movwf	_wCount+1
  4127                           
  4128                           ;Usb.c: 312: transferType=0;
  4129  021F  01BF               	clrf	_transferType
  4130                           
  4131                           ;Usb.c: 313: }
  4132  0220  0008               	return
  4133  0221                     i1l1699:	
  4134                           
  4135                           ;Usb.c: 315: else if (bRequest == 0x0A)
  4136  0221  300A               	movlw	10
  4137  0222  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4138  0223  1D03               	btfss	3,2
  4139  0224  2A2C               	goto	i1l1705
  4140                           
  4141                           ;Usb.c: 316: {
  4142                           ;Usb.c: 317: RequestHandled = 1;
  4143  0225  01BB               	clrf	_RequestHandled
  4144  0226  0ABB               	incf	_RequestHandled,f
  4145                           
  4146                           ;Usb.c: 318: HidIdleRate = SetupPacket.wValue1;
  4147  0227  0843               	movf	_SetupPacket+3,w	;volatile
  4148  0228  00F0               	movwf	??_ProcessHIDRequest
  4149  0229  0870               	movf	??_ProcessHIDRequest,w
  4150  022A  00E2               	movwf	_HidIdleRate
  4151                           
  4152                           ;Usb.c: 319: }
  4153  022B  0008               	return
  4154  022C                     i1l1705:	
  4155                           
  4156                           ;Usb.c: 321: else if (bRequest == 0x03)
  4157  022C  3003               	movlw	3
  4158  022D  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4159  022E  1D03               	btfss	3,2
  4160  022F  2A3C               	goto	i1l1713
  4161                           
  4162                           ;Usb.c: 322: {
  4163                           ;Usb.c: 323: RequestHandled = 1;
  4164  0230  01BB               	clrf	_RequestHandled
  4165  0231  0ABB               	incf	_RequestHandled,f
  4166                           
  4167                           ;Usb.c: 324: outPtr = &HidProtocol;
  4168  0232  3063               	movlw	(low (_HidProtocol| 0))& (0+255)
  4169  0233  00F0               	movwf	??_ProcessHIDRequest
  4170  0234  0870               	movf	??_ProcessHIDRequest,w
  4171  0235  00BE               	movwf	_outPtr
  4172                           
  4173                           ;Usb.c: 325: wCount = 1;
  4174  0236  3001               	movlw	1
  4175  0237  00B2               	movwf	_wCount
  4176  0238  3000               	movlw	0
  4177  0239  00B3               	movwf	_wCount+1
  4178                           
  4179                           ;Usb.c: 326: transferType=0;
  4180  023A  01BF               	clrf	_transferType
  4181                           
  4182                           ;Usb.c: 327: }
  4183  023B  0008               	return
  4184  023C                     i1l1713:	
  4185                           
  4186                           ;Usb.c: 329: else if (bRequest == 0x0B)
  4187  023C  300B               	movlw	11
  4188  023D  0672               	xorwf	ProcessHIDRequest@bRequest,w
  4189  023E  1D03               	btfss	3,2
  4190  023F  0008               	return
  4191                           
  4192                           ;Usb.c: 330: {
  4193                           ;Usb.c: 331: RequestHandled = 1;
  4194  0240  01BB               	clrf	_RequestHandled
  4195  0241  0ABB               	incf	_RequestHandled,f
  4196                           
  4197                           ;Usb.c: 332: HidProtocol = SetupPacket.wValue0;
  4198  0242  0842               	movf	_SetupPacket+2,w	;volatile
  4199  0243  00F0               	movwf	??_ProcessHIDRequest
  4200  0244  0870               	movf	??_ProcessHIDRequest,w
  4201  0245  00E3               	movwf	_HidProtocol
  4202                           
  4203                           ;Usb.c: 335: else
  4204                           ;Usb.c: 336: {
  4205                           
  4206                           ;Usb.c: 333: }
  4207  0246  0008               	return
  4208  0247                     __end_of_ProcessHIDRequest:	
  4209                           
  4210                           	psect	text27
  4211  014F                     __ptext27:	
  4212 ;; *************** function _InDataStage *****************
  4213 ;; Defined at:
  4214 ;;		line 561 in file "Source/Usb.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;		None
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  bufferSize      2    3[COMMON] unsigned short 
  4219 ;;  i               1    2[COMMON] unsigned char 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      void 
  4222 ;; Registers used:
  4223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4230 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4231 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4232 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4233 ;;Total ram usage:        5 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_SetupStage
  4239 ;;		_ProcessControlTransfer
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           
  4244                           ;psect for function _InDataStage
  4245  014F                     _InDataStage:	
  4246                           
  4247                           ;Usb.c: 563: BYTE i;
  4248                           ;Usb.c: 564: WORD bufferSize;
  4249                           ;Usb.c: 567: if(wCount < 0x08)
  4250                           
  4251                           ;incstack = 0
  4252                           ; Regs used in _InDataStage: [wreg-fsr1h+status,2+status,0+pclath]
  4253  014F  3000               	movlw	0
  4254  0150  0020               	movlb	0	; select bank0
  4255  0151  0233               	subwf	_wCount+1,w
  4256  0152  3008               	movlw	8
  4257  0153  1903               	skipnz
  4258  0154  0232               	subwf	_wCount,w
  4259  0155  1803               	skipnc
  4260  0156  295C               	goto	i1l1793
  4261                           
  4262                           ;Usb.c: 568: bufferSize = wCount;
  4263  0157  0833               	movf	_wCount+1,w
  4264  0158  00F4               	movwf	InDataStage@bufferSize+1
  4265  0159  0832               	movf	_wCount,w
  4266  015A  00F3               	movwf	InDataStage@bufferSize
  4267  015B  2960               	goto	i1l1795
  4268  015C                     i1l1793:	
  4269                           
  4270                           ;Usb.c: 569: else
  4271                           ;Usb.c: 570: bufferSize = 0x08;
  4272  015C  3008               	movlw	8
  4273  015D  00F3               	movwf	InDataStage@bufferSize
  4274  015E  3000               	movlw	0
  4275  015F  00F4               	movwf	InDataStage@bufferSize+1
  4276  0160                     i1l1795:	
  4277                           
  4278                           ;Usb.c: 573: Interfaces[0].Input.Stat &= ~(0x01 | 0x02);
  4279  0160  30FC               	movlw	252
  4280  0161  00F0               	movwf	??_InDataStage
  4281  0162  0870               	movf	??_InDataStage,w
  4282  0163  05A4               	andwf	36,f	;volatile
  4283                           
  4284                           ;Usb.c: 574: Interfaces[0].Input.Stat |= (BYTE)((bufferSize & 0x0300) >> 8);
  4285  0164  0874               	movf	InDataStage@bufferSize+1,w
  4286  0165  3903               	andlw	3
  4287  0166  00F0               	movwf	??_InDataStage
  4288  0167  0870               	movf	??_InDataStage,w
  4289  0168  04A4               	iorwf	36,f	;volatile
  4290                           
  4291                           ;Usb.c: 575: Interfaces[0].Input.Cnt = (BYTE)(bufferSize & 0xFF);
  4292  0169  0873               	movf	InDataStage@bufferSize,w
  4293  016A  00F0               	movwf	??_InDataStage
  4294  016B  0870               	movf	??_InDataStage,w
  4295  016C  00A5               	movwf	37	;volatile
  4296                           
  4297                           ;Usb.c: 576: Interfaces[0].Input.ADDR = ((unsigned int)(((unsigned long)&ControlTransfer
      +                          Buffer) & 0xFFFF));
  4298  016D  3049               	movlw	low _ControlTransferBuffer
  4299  016E  00A6               	movwf	38	;volatile
  4300  016F  3000               	movlw	high _ControlTransferBuffer
  4301  0170  00A7               	movwf	39	;volatile
  4302                           
  4303                           ;Usb.c: 581: wCount = wCount - bufferSize;
  4304  0171  0973               	comf	InDataStage@bufferSize,w
  4305  0172  00F0               	movwf	??_InDataStage
  4306  0173  0974               	comf	InDataStage@bufferSize+1,w
  4307  0174  00F1               	movwf	??_InDataStage+1
  4308  0175  0AF0               	incf	??_InDataStage,f
  4309  0176  1903               	skipnz
  4310  0177  0AF1               	incf	??_InDataStage+1,f
  4311  0178  0832               	movf	_wCount,w
  4312  0179  0770               	addwf	??_InDataStage,w
  4313  017A  00B2               	movwf	_wCount
  4314  017B  0833               	movf	_wCount+1,w
  4315  017C  3D71               	addwfc	??_InDataStage+1,w
  4316  017D  00B3               	movwf	_wCount+1
  4317                           
  4318                           ;Usb.c: 584: inPtr = (BYTE *)&ControlTransferBuffer;
  4319  017E  3049               	movlw	(low (_ControlTransferBuffer| 0))& (0+255)
  4320  017F  00F0               	movwf	??_InDataStage
  4321  0180  0870               	movf	??_InDataStage,w
  4322  0181  00BD               	movwf	_inPtr
  4323                           
  4324                           ;Usb.c: 585: if(transferType==1) for(i=0;i<bufferSize;i++) *inPtr++ = *ROMoutPtr++;
  4325  0182  033F               	decf	_transferType,w
  4326  0183  1D03               	btfss	3,2
  4327  0184  29A9               	goto	i1l1817
  4328  0185  01F2               	clrf	InDataStage@i
  4329  0186                     i1l1815:	
  4330  0186  0872               	movf	InDataStage@i,w
  4331  0187  00F0               	movwf	??_InDataStage
  4332  0188  01F1               	clrf	??_InDataStage+1
  4333  0189  0874               	movf	InDataStage@bufferSize+1,w
  4334  018A  0271               	subwf	??_InDataStage+1,w
  4335  018B  1D03               	skipz
  4336  018C  298F               	goto	u191_25
  4337  018D  0873               	movf	InDataStage@bufferSize,w
  4338  018E  0270               	subwf	??_InDataStage,w
  4339  018F                     u191_25:	
  4340  018F  1803               	btfsc	3,0
  4341  0190  0008               	return
  4342  0191  0830               	movf	_ROMoutPtr,w
  4343  0192  0084               	movwf	4
  4344  0193  0831               	movf	_ROMoutPtr+1,w
  4345  0194  0085               	movwf	5
  4346  0195  0800               	movf	0,w	;code access
  4347  0196  00F0               	movwf	??_InDataStage
  4348  0197  083D               	movf	_inPtr,w
  4349  0198  0086               	movwf	6
  4350  0199  0187               	clrf	7
  4351  019A  0870               	movf	??_InDataStage,w
  4352  019B  0081               	movwf	1
  4353  019C  3001               	movlw	1
  4354  019D  07B0               	addwf	_ROMoutPtr,f
  4355  019E  3000               	movlw	0
  4356  019F  3DB1               	addwfc	_ROMoutPtr+1,f
  4357  01A0  3001               	movlw	1
  4358  01A1  00F0               	movwf	??_InDataStage
  4359  01A2  0870               	movf	??_InDataStage,w
  4360  01A3  07BD               	addwf	_inPtr,f
  4361  01A4  3001               	movlw	1
  4362  01A5  00F0               	movwf	??_InDataStage
  4363  01A6  0870               	movf	??_InDataStage,w
  4364  01A7  07F2               	addwf	InDataStage@i,f
  4365  01A8  2986               	goto	i1l1815
  4366  01A9                     i1l1817:	
  4367                           
  4368                           ;Usb.c: 586: else for(i=0;i<bufferSize;i++) *inPtr++ = *outPtr++;
  4369  01A9  01F2               	clrf	InDataStage@i
  4370  01AA                     i1l1827:	
  4371  01AA  0872               	movf	InDataStage@i,w
  4372  01AB  00F0               	movwf	??_InDataStage
  4373  01AC  01F1               	clrf	??_InDataStage+1
  4374  01AD  0874               	movf	InDataStage@bufferSize+1,w
  4375  01AE  0271               	subwf	??_InDataStage+1,w
  4376  01AF  1D03               	skipz
  4377  01B0  29B3               	goto	u192_25
  4378  01B1  0873               	movf	InDataStage@bufferSize,w
  4379  01B2  0270               	subwf	??_InDataStage,w
  4380  01B3                     u192_25:	
  4381  01B3  1803               	btfsc	3,0
  4382  01B4  0008               	return
  4383  01B5  083E               	movf	_outPtr,w
  4384  01B6  0086               	movwf	6
  4385  01B7  0187               	clrf	7
  4386  01B8  0801               	movf	1,w
  4387  01B9  00F0               	movwf	??_InDataStage
  4388  01BA  083D               	movf	_inPtr,w
  4389  01BB  0086               	movwf	6
  4390  01BC  0187               	clrf	7
  4391  01BD  0870               	movf	??_InDataStage,w
  4392  01BE  0081               	movwf	1
  4393  01BF  3001               	movlw	1
  4394  01C0  00F0               	movwf	??_InDataStage
  4395  01C1  0870               	movf	??_InDataStage,w
  4396  01C2  07BE               	addwf	_outPtr,f
  4397  01C3  3001               	movlw	1
  4398  01C4  00F0               	movwf	??_InDataStage
  4399  01C5  0870               	movf	??_InDataStage,w
  4400  01C6  07BD               	addwf	_inPtr,f
  4401  01C7  3001               	movlw	1
  4402  01C8  00F0               	movwf	??_InDataStage
  4403  01C9  0870               	movf	??_InDataStage,w
  4404  01CA  07F2               	addwf	InDataStage@i,f
  4405  01CB  29AA               	goto	i1l1827
  4406  01CC                     __end_of_InDataStage:	
  4407                           
  4408                           	psect	text28
  4409  059A                     __ptext28:	
  4410 ;; *************** function _OutDataStage *****************
  4411 ;; Defined at:
  4412 ;;		line 590 in file "Source/Usb.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  bufferSize      2    3[COMMON] unsigned short 
  4417 ;;  i               2    1[COMMON] unsigned short 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;Total ram usage:        5 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_ProcessControlTransfer
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _OutDataStage
  4442  059A                     _OutDataStage:	
  4443                           
  4444                           ;Usb.c: 592: WORD i, bufferSize;
  4445                           ;Usb.c: 594: bufferSize = ((0x03 & Interfaces[0].Output.Stat) << 8) | Interfaces[0].Outp
      +                          ut.Cnt;
  4446                           
  4447                           ;incstack = 0
  4448                           ; Regs used in _OutDataStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  4449  059A  3003               	movlw	3
  4450  059B  0020               	movlb	0	; select bank0
  4451  059C  0520               	andwf	32,w	;volatile
  4452  059D  00F0               	movwf	??_OutDataStage
  4453  059E  0870               	movf	??_OutDataStage,w
  4454  059F  00F4               	movwf	OutDataStage@bufferSize+1
  4455  05A0  0821               	movf	33,w	;volatile
  4456  05A1  00F3               	movwf	OutDataStage@bufferSize
  4457                           
  4458                           ;Usb.c: 597: wCount = wCount + bufferSize;
  4459  05A2  0873               	movf	OutDataStage@bufferSize,w
  4460  05A3  0732               	addwf	_wCount,w
  4461  05A4  00B2               	movwf	_wCount
  4462  05A5  0874               	movf	OutDataStage@bufferSize+1,w
  4463  05A6  3D33               	addwfc	_wCount+1,w
  4464  05A7  00B3               	movwf	_wCount+1
  4465                           
  4466                           ;Usb.c: 599: outPtr = (BYTE*)&ControlTransferBuffer;
  4467  05A8  3049               	movlw	(low (_ControlTransferBuffer| 0))& (0+255)
  4468  05A9  00F0               	movwf	??_OutDataStage
  4469  05AA  0870               	movf	??_OutDataStage,w
  4470  05AB  00BE               	movwf	_outPtr
  4471                           
  4472                           ;Usb.c: 601: for (i=0;i<bufferSize;i++)
  4473  05AC  01F1               	clrf	OutDataStage@i
  4474  05AD  01F2               	clrf	OutDataStage@i+1
  4475  05AE                     i1l1889:	
  4476  05AE  0874               	movf	OutDataStage@bufferSize+1,w
  4477  05AF  0272               	subwf	OutDataStage@i+1,w
  4478  05B0  1D03               	skipz
  4479  05B1  2DB4               	goto	u214_25
  4480  05B2  0873               	movf	OutDataStage@bufferSize,w
  4481  05B3  0271               	subwf	OutDataStage@i,w
  4482  05B4                     u214_25:	
  4483  05B4  1803               	btfsc	3,0
  4484  05B5  0008               	return
  4485                           
  4486                           ;Usb.c: 602: {
  4487                           ;Usb.c: 603: *inPtr++ = *outPtr++;
  4488  05B6  083E               	movf	_outPtr,w
  4489  05B7  0086               	movwf	6
  4490  05B8  0187               	clrf	7
  4491  05B9  0801               	movf	1,w
  4492  05BA  00F0               	movwf	??_OutDataStage
  4493  05BB  083D               	movf	_inPtr,w
  4494  05BC  0086               	movwf	6
  4495  05BD  0187               	clrf	7
  4496  05BE  0870               	movf	??_OutDataStage,w
  4497  05BF  0081               	movwf	1
  4498  05C0  3001               	movlw	1
  4499  05C1  00F0               	movwf	??_OutDataStage
  4500  05C2  0870               	movf	??_OutDataStage,w
  4501  05C3  07BE               	addwf	_outPtr,f
  4502  05C4  3001               	movlw	1
  4503  05C5  00F0               	movwf	??_OutDataStage
  4504  05C6  0870               	movf	??_OutDataStage,w
  4505  05C7  07BD               	addwf	_inPtr,f
  4506  05C8  3001               	movlw	1
  4507  05C9  07F1               	addwf	OutDataStage@i,f
  4508  05CA  3000               	movlw	0
  4509  05CB  3DF2               	addwfc	OutDataStage@i+1,f
  4510  05CC  2DAE               	goto	i1l1889
  4511  05CD                     __end_of_OutDataStage:	
  4512                           
  4513                           	psect	text29
  4514  062F                     __ptext29:	
  4515 ;; *************** function _BusReset *****************
  4516 ;; Defined at:
  4517 ;;		line 831 in file "Source/Usb.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0, pclath, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;Total ram usage:        1 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    1
  4538 ;; This function calls:
  4539 ;;		_WaitForSetupStage
  4540 ;; This function is called by:
  4541 ;;		_ProcessUSBTransactions
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           
  4546                           ;psect for function _BusReset
  4547  062F                     _BusReset:	
  4548                           
  4549                           ;Usb.c: 833: UEIR = 0x00;
  4550                           
  4551                           ;incstack = 0
  4552                           ; Regs used in _BusReset: [wreg+status,2+status,0+pclath+cstack]
  4553  062F  003D               	movlb	29	; select bank29
  4554  0630  0193               	clrf	19	;volatile
  4555                           
  4556                           ;Usb.c: 834: UIR = 0x00;
  4557  0631  0190               	clrf	16	;volatile
  4558                           
  4559                           ;Usb.c: 835: UEIE = 0x9f;
  4560  0632  309F               	movlw	159
  4561  0633  0097               	movwf	23	;volatile
  4562                           
  4563                           ;Usb.c: 836: UIE = 0x7b;
  4564  0634  307B               	movlw	123
  4565  0635  0092               	movwf	18	;volatile
  4566                           
  4567                           ;Usb.c: 837: UADDR = 0x00;
  4568  0636  0196               	clrf	22	;volatile
  4569                           
  4570                           ;Usb.c: 840: UEP0 = 0x16;
  4571  0637  3016               	movlw	22
  4572  0638  0098               	movwf	24	;volatile
  4573  0639                     i1l387:	
  4574                           ;Usb.c: 843: while (UIRbits.TRNIF == 1) UIRbits.TRNIF = 0;
  4575                           
  4576  0639  1D90               	btfss	16,3	;volatile
  4577  063A  2E3D               	goto	i1l389
  4578  063B  1190               	bcf	16,3	;volatile
  4579  063C  2E39               	goto	i1l387
  4580  063D                     i1l389:	
  4581                           
  4582                           ;Usb.c: 846: UCONbits.PKTDIS = 0;
  4583  063D  120E               	bcf	14,4	;volatile
  4584                           
  4585                           ;Usb.c: 849: WaitForSetupStage();
  4586  063E  3186  26B9         	fcall	_WaitForSetupStage
  4587                           
  4588                           ;Usb.c: 851: RemoteWakeup = 0;
  4589  0640  0020               	movlb	0	; select bank0
  4590  0641  01BA               	clrf	_RemoteWakeup
  4591                           
  4592                           ;Usb.c: 852: SelfPowered = 0;
  4593  0642  01BC               	clrf	_SelfPowered
  4594                           
  4595                           ;Usb.c: 853: CurrentConfiguration = 0;
  4596  0643  01E1               	clrf	_CurrentConfiguration
  4597                           
  4598                           ;Usb.c: 854: DeviceState = 0x03;
  4599  0644  3003               	movlw	3
  4600  0645  00F1               	movwf	??_BusReset
  4601  0646  0871               	movf	??_BusReset,w
  4602  0647  00B7               	movwf	_DeviceState
  4603  0648  0008               	return
  4604  0649                     __end_of_BusReset:	
  4605                           
  4606                           	psect	text30
  4607  06B9                     __ptext30:	
  4608 ;; *************** function _WaitForSetupStage *****************
  4609 ;; Defined at:
  4610 ;;		line 678 in file "Source/Usb.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;		None
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;Total ram usage:        1 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_ProcessControlTransfer
  4634 ;;		_Stall
  4635 ;;		_BusReset
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           
  4640                           ;psect for function _WaitForSetupStage
  4641  06B9                     _WaitForSetupStage:	
  4642                           
  4643                           ;Usb.c: 680: CtrlTransferStage = 0x00;
  4644                           
  4645                           ;incstack = 0
  4646                           ; Regs used in _WaitForSetupStage: [wreg+status,2+status,0]
  4647  06B9  0020               	movlb	0	; select bank0
  4648  06BA  01B5               	clrf	_CtrlTransferStage
  4649                           
  4650                           ;Usb.c: 681: Interfaces[0].Output.Cnt = 0x08;
  4651  06BB  3008               	movlw	8
  4652  06BC  00A1               	movwf	33	;volatile
  4653                           
  4654                           ;Usb.c: 682: Interfaces[0].Output.ADDR = ((unsigned int)(((unsigned long)&SetupPacket) &
      +                           0xFFFF));
  4655  06BD  3040               	movlw	low _SetupPacket
  4656  06BE  00A2               	movwf	34	;volatile
  4657  06BF  3000               	movlw	high _SetupPacket
  4658  06C0  00A3               	movwf	35	;volatile
  4659                           
  4660                           ;Usb.c: 683: Interfaces[0].Output.Stat = 0x80 | 0x08;
  4661  06C1  3088               	movlw	136
  4662  06C2  00F0               	movwf	??_WaitForSetupStage
  4663  06C3  0870               	movf	??_WaitForSetupStage,w
  4664  06C4  00A0               	movwf	32	;volatile
  4665                           
  4666                           ;Usb.c: 684: Interfaces[0].Input.Stat = 0x00;
  4667  06C5  01A4               	clrf	36	;volatile
  4668  06C6  0008               	return
  4669  06C7                     __end_of_WaitForSetupStage:	
  4670  007E                     btemp	set	126	;btemp
  4671  007E                     int$flags	set	126
  4672  007E                     wtemp	set	126
  4673  007E                     wtemp0	set	126
  4674  0080                     wtemp1	set	128
  4675  0082                     wtemp2	set	130
  4676  0084                     wtemp3	set	132
  4677  0086                     wtemp4	set	134
  4678  0088                     wtemp5	set	136
  4679  007F                     wtemp6	set	127
  4680  007E                     ttemp	set	126
  4681  007E                     ttemp0	set	126
  4682  0081                     ttemp1	set	129
  4683  0084                     ttemp2	set	132
  4684  0087                     ttemp3	set	135
  4685  007F                     ttemp4	set	127
  4686  007E                     ltemp	set	126
  4687  007E                     ltemp0	set	126
  4688  0082                     ltemp1	set	130
  4689  0086                     ltemp2	set	134
  4690  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    156
    Data        4
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            64      3      59
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    inPtr	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), ControlTransferBuffer(BANK0[8]), Interfaces.Output(BANK0[4]), Interfaces(BANK0[16]), 

    outPtr	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), CurrentConfiguration(BANK0[1]), ControlTransferBuffer(BANK0[8]), HidProtocol(BANK0[1]), 
		 -> HidIdleRate(BANK0[1]), 

    ROMoutPtr	PTR const unsigned char  size(2) Largest target is 8192
		 -> DeviceDescriptor(CODE[18]), HIDReport(CODE[47]), ROM(CODE[8192]), StringDescriptor2(CODE[28]), 
		 -> StringDescriptor1(CODE[13]), StringDescriptor0(CODE[3]), ConfigurationDescriptor.HIDDescriptor(CODE[32]), ConfigurationDescriptor(CODE[41]), 

    StringDescriptorPointers	const PTR const unsigned char [3] size(2) Largest target is 28
		 -> StringDescriptor2(CODE[28]), StringDescriptor1(CODE[13]), StringDescriptor0(CODE[3]), 

    S19_BufferInfo$Buffer	PTR unsigned char  size(1) Largest target is 8
		 -> HIDRxBuffer(BANK0[8]), HIDTxBuffer(BANK0[8]), 

    Buffers.Buffer	PTR unsigned char  size(1) Largest target is 8
		 -> HIDRxBuffer(BANK0[8]), HIDTxBuffer(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _ISRCode->_ProcessUSBTransactions
    _ProcessUSBTransactions->_ProcessControlTransfer
    _Stall->_WaitForSetupStage
    _ProcessControlTransfer->_SetupStage
    _SetupStage->_ProcessStandardRequest
    _ProcessStandardRequest->_SetFeature
    _BusReset->_WaitForSetupStage

Critical Paths under _main in BANK0

    _ProcessIO->_HIDSend
    _CheckUsb->_HIDSend
    _CheckUsb->_ReArmInterface
    _ProcessIncommingData->_PrepareTxBuffer

Critical Paths under _ISRCode in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRCode in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     598
                   _EnableInterrupts
                    _EnableUSBModule
                   _InitializeSystem
                      _InitializeUSB
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            0     0      0     598
                           _CheckUsb
                            _HIDSend
                    _PrepareTxBuffer
 ---------------------------------------------------------------------------------
 (2) _CheckUsb                                             0     0      0     398
                            _HIDSend
                 _IsUsbDataAvaialble
               _ProcessIncommingData
                     _ReArmInterface
 ---------------------------------------------------------------------------------
 (3) _ReArmInterface                                       3     3      0     132
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _ProcessIncommingData                                 0     0      0      68
                    _PrepareTxBuffer
 ---------------------------------------------------------------------------------
 (2) _PrepareTxBuffer                                      2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _IsUsbDataAvaialble                                   2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _HIDSend                                              3     3      0     132
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitializeUSB                                        0     0      0       0
                     _ResetPPBuffers
 ---------------------------------------------------------------------------------
 (2) _ResetPPBuffers                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnableUSBModule                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnableInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISRCode                                              1     1      0    1527
                                             13 COMMON     1     1      0
             _ProcessUSBTransactions
 ---------------------------------------------------------------------------------
 (6) _ProcessUSBTransactions                               1     1      0    1527
                                             12 COMMON     1     1      0
                           _BusReset
             _ProcessControlTransfer
                              _Stall
                       _StartOfFrame
                            _Suspend
                          _UnSuspend
 ---------------------------------------------------------------------------------
 (7) _UnSuspend                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Suspend                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _StartOfFrame                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Stall                                                0     0      0       0
                  _WaitForSetupStage
 ---------------------------------------------------------------------------------
 (7) _ProcessControlTransfer                               3     3      0    1527
                                              9 COMMON     3     3      0
                        _InDataStage
                       _OutDataStage
                         _SetupStage
                  _WaitForSetupStage
 ---------------------------------------------------------------------------------
 (8) _SetupStage                                           1     1      0    1275
                                              8 COMMON     1     1      0
                        _InDataStage
                  _ProcessHIDRequest
             _ProcessStandardRequest
 ---------------------------------------------------------------------------------
 (9) _ProcessStandardRequest                               2     2      0     893
                                              6 COMMON     2     2      0
                      _GetDescriptor
                          _GetStatus
                   _HIDInitEndpoints
                         _SetFeature
 ---------------------------------------------------------------------------------
 (10) _SetFeature                                          6     6      0     180
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (10) _HIDInitEndpoints                                    5     5      0     245
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (10) _GetStatus                                           5     5      0     113
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (10) _GetDescriptor                                       5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (9) _ProcessHIDRequest                                    3     3      0     222
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _InDataStage                                          5     5      0     160
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (8) _OutDataStage                                         5     5      0      69
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (7) _BusReset                                             1     1      0       0
                                              1 COMMON     1     1      0
                  _WaitForSetupStage
 ---------------------------------------------------------------------------------
 (8) _WaitForSetupStage                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EnableInterrupts
   _EnableUSBModule
   _InitializeSystem
   _InitializeUSB
     _ResetPPBuffers
   _ProcessIO
     _CheckUsb
       _HIDSend
       _IsUsbDataAvaialble
       _ProcessIncommingData
         _PrepareTxBuffer
       _ReArmInterface
     _HIDSend
     _PrepareTxBuffer

 _ISRCode (ROOT)
   _ProcessUSBTransactions
     _BusReset
       _WaitForSetupStage
     _ProcessControlTransfer
       _InDataStage
       _OutDataStage
       _SetupStage
         _InDataStage
         _ProcessHIDRequest
         _ProcessStandardRequest
           _GetDescriptor
           _GetStatus
           _HIDInitEndpoints
           _SetFeature
       _WaitForSetupStage
     _Stall
       _WaitForSetupStage
     _StartOfFrame
     _Suspend
     _UnSuspend

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            40      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               40      3      3B       5       92.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      49      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      49      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Oct 14 10:51:59 2017

                     __CFG_CP$OFF 0000        __size_of_WaitForSetupStage 000E            __end_of_ResetPPBuffers 06F6  
                              l86 0670        __end_of_IsUsbDataAvaialble 05F2          __end_of_EnableInterrupts 06D8  
                             l368 0652                               _RC2 0072                               _RC3 0073  
                             _UIE 0E92                               _UIR 0E90                      __CFG_BORV$LO 0000  
                             wreg 0009                      _transferType 003F                   __end_of_HIDSend 0546  
                    __CFG_LVP$OFF 0000                              l2141 061C                              l2187 06A6  
                            l1833 0667                              l1853 05F0                              l1847 05D4  
                            l1839 0671                              l1863 04E0                              l1873 0535  
                            u2005 04A0                              u2105 0519                              u2025 04B6  
                            u2035 04C4                              u2125 0529                              u2135 053A  
                            u2055 04D4                              _LATC 010E                              u2065 04E5  
                            u2075 04F6                              u2095 050B                              u1975 05D7  
                            u1995 05E5                              i1l70 000D                              _UCFG 0E91  
                            _UEP0 0E98                              _UEIE 0E97                              _UEIR 0E93  
                            _UCON 0E8E                   __end_of_ISRCode 0012                      __CFG_WRT$OFF 0000  
                            _main 069A             __end_of_GetDescriptor 049B                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
            _CurrentConfiguration 0061                     __CFG_BOREN$ON 0000                              ltemp 007E  
                            start 0012                              ttemp 007E                              wtemp 007E  
                   __CFG_IESO$OFF 0000            __size_of_InitializeUSB 000F                 ??_EnableUSBModule 0068  
                _HIDInitEndpoints 00CB                   ?_ResetPPBuffers 0070     IsUsbDataAvaialble@InterfaceNo 0069  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                   __end_of_Suspend 06E8  
                           i1l402 0315                             i1l331 0370                             i1l329 0347  
                           i1l274 03C8                             i1l393 02C4                             i1l387 0639  
                           i1l396 02D6                             i1l389 063D                             _UADDR 0E96  
                           _TRISC 008E                             _USTAT 0E8F                HIDSend@InterfaceNo 006A  
                  __CFG_FCMEN$OFF 0000                       _InDataStage 014F                             _Stall 06C7  
                           _inPtr 003D          ??_ProcessUSBTransactions 007C                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                     _HidIdleRate 0062                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F                  __end_of_CheckUsb 069A  
                  __CFG_MCLRE$OFF 0000                   __initialization 0014                  __end_of_BusReset 0649  
                    __end_of_main 06AA          ??_ProcessControlTransfer 0079                    __CFG_LPBOR$OFF 0000  
                     _DeviceState 0037                            ??_main 006B                       _HidProtocol 0063  
       __size_of_InitializeSystem 0014                 __end_of_HIDReport 0064                        _Interfaces 0020  
                       ??_HIDSend 0068               __CFG_USBLSCLK$48MHz 0000                __size_of_GetStatus 0054  
                       ??_ISRCode 007D                        _SetFeature 0384                     _InitializeUSB 06AA  
                          ?_Stall 0070                            _ACTCON 039B                            _ANSELA 018C  
                          _ANSELC 018E                            i1l2013 06CE                            i1l2101 030B  
                          i1l2115 0320                            i1l2053 02D0                            i1l1531 045F  
                          i1l1611 039D                            i1l2091 0302                            i1l2083 02F7  
                          i1l2075 02EC                            i1l2067 02E1                            i1l1613 039F  
                          i1l1713 023C                            i1l1705 022C                            i1l1633 03DC  
                          i1l1547 047E                            i1l1539 0470                            i1l1571 055B  
                          i1l1731 025F                            i1l1629 03D4                            i1l1815 0186  
                          i1l1575 0561                            i1l1591 058D                            i1l1735 0266  
                          i1l1817 01A9                            i1l1761 0297                            i1l1745 0279  
                          i1l1827 01AA                            i1l1691 0211                            i1l1667 01EE  
                          i1l1587 0584                            i1l1765 029E                            i1l1757 0291  
                          i1l1749 0280                            i1l1679 01FE                            i1l1767 02A1  
                          i1l1919 0355                            i1l1943 0381                            i1l1793 015C  
                          i1l1777 02B3                            i1l1795 0160                            i1l1699 0221  
                          i1l1973 040A                            i1l1965 03FB                            i1l1975 040F  
                          i1l1889 05AE                            i1l1977 0412                            i1l1997 043A  
                          i1l1989 042A                            u220_25 03EC                            i1l1999 043F  
                          u133_25 00E6                            u214_25 05B4                            u150_25 0574  
                          u134_25 00FE                            u135_25 0110                            u136_25 011E  
                          u160_25 03B8                            u137_25 012D                            u217_25 034F  
                          u138_25 013F                            u191_25 018F                            u192_25 01B3  
                          _OSCCON 0099         ProcessHIDRequest@bRequest 0072                    __CFG_PWRTE$OFF 0000  
                  __CFG_STVREN$ON 0000            OutDataStage@bufferSize 0073                         ??_Suspend 0070  
                          _wCount 0032                        _SetupStage 0323                            _outPtr 003E  
              __size_of_UnSuspend 0008                __size_of_ProcessIO 001E                    ?_InitializeUSB 0070  
        __size_of_PrepareTxBuffer 001F           ?_ProcessStandardRequest 0070   __size_of_ProcessUSBTransactions 0068  
    GetDescriptor@descriptorIndex 0073                    _RequestHandled 003B           __end_of__initialization 002B  
           SetFeature@endpointDir 0075                 __end_of_GetStatus 059A             SetFeature@endpointNum 0074  
                  __pcstackCOMMON 0070                     __end_of_Stall 06D0                      __pidataBANK0 06EE  
 __size_of_ProcessControlTransfer 005E                 ?_EnableInterrupts 0070                         ?_CheckUsb 0070  
              ??_EnableInterrupts 0068      __end_of_ProcessIncommingData 0674    __end_of_ProcessStandardRequest 02BB  
                     ?_SetFeature 0070                           ??_Stall 0071           __size_of_ReArmInterface 0056  
              _IsUsbDataAvaialble 05CD          __end_of_HIDInitEndpoints 014F                         ?_BusReset 0070  
                      __pbssBANK0 0030                   _EnableUSBModule 0649  __end_of_StringDescriptorPointers 0035  
                   ?_OutDataStage 0070               ?_IsUsbDataAvaialble 0070                 __end_of_UnSuspend 06E0  
               __end_of_ProcessIO 062F                  ??_ResetPPBuffers 0068             InDataStage@bufferSize 0073  
                      __pmaintext 069A                   __CFG_PLLMULT$3x 0000            _ProcessUSBTransactions 02BB  
                      __pintentry 0004                       ?_SetupStage 0070                       _SelfPowered 003C  
                _InitializeSystem 0674              ??_IsUsbDataAvaialble 0068                   ??_InitializeUSB 0068  
                         _HIDSend 04F1                        ??_CheckUsb 006B                      ?_InDataStage 0070  
                         _ISRCode 0004                           _OSCTUNE 0098                           _UIEbits 0E92  
                      ??_BusReset 0071                           _UIRbits 0E90            _ProcessControlTransfer 03E4  
                  ??_OutDataStage 0070                 ??_PrepareTxBuffer 0068                           _Buffers 0064  
             __size_of_SetFeature 0060                           _Suspend 06E0                     OutDataStage@i 0071  
                         __ptext1 0611                           __ptext2 0688                           __ptext3 049B  
                         __ptext4 065F                           __ptext5 05F2                           __ptext6 05CD  
                         __ptext7 04F1                           __ptext8 06AA                           __ptext9 06F2  
          __size_of_GetDescriptor 0059                       _SetupPacket 0040           __end_of_EnableUSBModule 065F  
                       _HIDReport 0035                           clrloop0 06E9              end_of_initialization 002B  
             __size_of_SetupStage 0061              _ProcessIncommingData 065F         ReArmInterface@InterfaceNo 006A  
                   ?_StartOfFrame 0070                      __pstringtext 002F                  __CFG_FOSC$INTOSC 0000  
                  _ReArmInterface 049B     ProcessStandardRequest@request 0077                         _ROMoutPtr 0030  
                   _GetDescriptor 0442             ?_ProcessIncommingData 0070                __CFG_PLLEN$ENABLED 0000  
                  ??_StartOfFrame 0070                      InDataStage@i 0072              GetStatus@endpointDir 0073  
            GetStatus@endpointNum 0072                         _GetStatus 0546   __end_of_ConfigurationDescriptor 008D  
            __end_of_OutDataStage 05CD            __end_of_ReArmInterface 04F1                 _StringDescriptor0 00C8  
               _StringDescriptor1 00BB                 _StringDescriptor2 008D               start_initialization 0014  
                    ??_SetFeature 0070                  ?_EnableUSBModule 0070                 __size_of_CheckUsb 0012  
                    _ButtonStatus 0034              __size_of_InDataStage 007D                 ?_HIDInitEndpoints 0070  
       __size_of_EnableInterrupts 0008                     _DeviceAddress 0036                 __size_of_BusReset 001A  
              ??_HIDInitEndpoints 0070                    ?_GetDescriptor 0070          __end_of_InitializeSystem 0688  
         ?_ProcessUSBTransactions 0070                         _UnSuspend 06D8                __end_of_SetFeature 03E4  
                       _ProcessIO 0611                        ?_GetStatus 0070                       __pdataBANK0 0064  
                    ??_SetupStage 0078                 HIDInitEndpoints@i 0074         __end_of_StringDescriptor0 00CB  
       __end_of_StringDescriptor1 00C8         __end_of_StringDescriptor2 00A9       GetDescriptor@descriptorType 0074  
                        ?_HIDSend 0070                   ?_ReArmInterface 0070                   _PrepareTxBuffer 05F2  
                       ___latbits 0002                     __pcstackBANK0 0068                          ?_ISRCode 0070  
         ?_ProcessControlTransfer 0070    __end_of_ProcessUSBTransactions 0323            ??_ProcessIncommingData 006A  
              __end_of_SetupStage 0384                  PrepareTxBuffer@i 0069                 _ProcessHIDRequest 01CC  
                      ?_UnSuspend 0070                        ?_ProcessIO 0070                          ?_Suspend 0070  
              ?_ProcessHIDRequest 0070       __size_of_IsUsbDataAvaialble 0025               ??_ProcessHIDRequest 0070  
  __end_of_ProcessControlTransfer 0442             __end_of_InitializeUSB 06B9                    __size_of_Stall 0009  
            __end_of_StartOfFrame 06F9                   ??_GetDescriptor 0070                         clear_ram0 06E8  
                        _PIE2bits 0092                  _DeviceDescriptor 00A9         __end_of_ProcessHIDRequest 0247  
                        _PIR2bits 0012                       _HIDRxBuffer 0051                          _UEP0bits 0E98  
           __size_of_OutDataStage 0033                       _HIDTxBuffer 0059                          _UCONbits 0E8E  
                     ??_GetStatus 0070           __end_of_PrepareTxBuffer 0611          ??_ProcessStandardRequest 0076  
         __size_of_ResetPPBuffers 0004                          _CheckUsb 0688                      _RemoteWakeup 003A  
                __size_of_HIDSend 0055                          _HidRxLen 0039                  __size_of_ISRCode 000E  
                        _BusReset 062F                  _EnableInterrupts 06D0                      _OutDataStage 059A  
           _ControlTransferBuffer 0049                 _CtrlTransferStage 0035                       ??_UnSuspend 0070  
                     ??_ProcessIO 006B                  __size_of_Suspend 0008                     _EndpointFlags 0E99  
 ProcessHIDRequest@descriptorType 0071                 _WaitForSetupStage 06B9                ?_WaitForSetupStage 0070  
                        __ptext10 0674                          __ptext11 0649                          __ptext20 0323  
                        __ptext12 06D0                          __ptext21 0247                          __ptext30 06B9  
                        __ptext22 0384                          __ptext14 02BB                          __ptext23 00CB  
                        __ptext15 06D8                          __ptext24 0546                          __ptext16 06E0  
                        __ptext25 0442                          __ptext17 06F6                          __ptext26 01CC  
                        __ptext18 06C7                          __ptext27 014F                          __ptext19 03E4  
                        __ptext28 059A                          __ptext29 062F               ??_WaitForSetupStage 0070  
             SetFeature@recipient 0072                     __size_of_main 0010                 ?_InitializeSystem 0070  
      __size_of_ProcessHIDRequest 007B                ??_InitializeSystem 0068                          int$flags 007E  
        _StringDescriptorPointers 002F         __size_of_HIDInitEndpoints 0084         __end_of_WaitForSetupStage 06C7  
                ??_ReArmInterface 0068                  ?_PrepareTxBuffer 0070   __size_of_ProcessStandardRequest 0074  
           __size_of_StartOfFrame 0003                        _INTCONbits 000B                     ??_InDataStage 0070  
       ProcessControlTransfer@PID 007B                          intlevel1 0000                GetStatus@recipient 0074  
         _ConfigurationDescriptor 0064          __size_of_EnableUSBModule 0016                 __CFG_CLKOUTEN$OFF 0000  
                    _StartOfFrame 06F6              __CFG_CPUDIV$NOCLKDIV 0000                 SetFeature@feature 0073  
                  _ResetPPBuffers 06F2                    _HIDPostProcess 0038                        _OPTION_REG 0095  
        __end_of_DeviceDescriptor 00BB            _ProcessStandardRequest 0247               __end_of_InDataStage 01CC  
   __size_of_ProcessIncommingData 0015  
